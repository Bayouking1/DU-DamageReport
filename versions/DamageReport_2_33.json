{
  "slots": {
    "0": {
      "name": "core",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "1": {
      "name": "slot2",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "2": {
      "name": "slot3",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "3": {
      "name": "slot4",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "4": {
      "name": "slot5",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "5": {
      "name": "slot6",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "6": {
      "name": "slot7",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "7": {
      "name": "slot8",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "8": {
      "name": "slot9",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "9": {
      "name": "slot10",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-1": {
      "name": "unit",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-2": {
      "name": "system",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-3": {
      "name": "library",
      "type": {
        "events": [],
        "methods": []
      }
    }
  },
  "handlers": [
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "1"
      },
      "key": "0"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "2"
      },
      "key": "1"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "3"
      },
      "key": "2"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "4"
      },
      "key": "3"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "5"
      },
      "key": "4"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "6"
      },
      "key": "5"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "7"
      },
      "key": "6"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "8"
      },
      "key": "7"
    },
    {
      "code": "clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)",
      "filter": {
        "args": [
          {
            "variable": "*"
          },
          {
            "variable": "*"
          }
        ],
        "signature": "mouseDown(x,y)",
        "slotKey": "9"
      },
      "key": "8"
    },
    {
      "code": "--[[\n    DamageReport v2.33\n    Created By Dorian Gray\n\n    Discord: Dorian Gray#2623\n    InGame: DorianGray\n    GitHub: https://github.com/DorianTheGrey/DU-DamageReport\n\n    GNU Public License 3.0. Use whatever you want, be so kind to leave credit.\n\n    Thanks to Jericho, Dmentia and Archaegeo for learning from their fine scripts.\n]] \n-----------------------------------------------\n-- CONFIG\n-----------------------------------------------\nUseMyElementNames = true --export: If you active this, the display will not show the element type of damaged/broken elements but the name you gave them (truncated to 25 characters)\nAllowElementHighlighting = true --export: Are you allowing damaged/broken elements to be highlighted in 3D space when selected in the HUD?\nUpdateInterval = 1 --export: Interval in seconds between updates of the calculations and (if anything changed) redrawing to the screen(s). You need to restart the script after changing this value.\nHighlightBlinkingInterval = 0.5 --export: If an element is marked, how fast do you want the arrows to blink?\nSimulationMode = false --export Randomize simluated damage on elements to check out the functionality of this script. And, no, your elements won't be harmed in the process :) You need to restart the script after changing this value.\nYourShipsName = \"Enter here\" --export Enter your ship name here if you want it displayed instead of the ship's ID. YOU NEED TO LEAVE THE QUOTATION MARKS.\nBackgroundColor = \"1e1e1e\" --export Set the background color of the screens. YOU NEED TO LEAVE THE QUOTATION MARKS.\n\nDebugMode = false -- Activate if you want some console messages\nVersionNumber = 2.33 -- Version number\n\ncore = nil\nscreens = {}\n\nshipID = 0\nforceRedraw = false\nSimulationActive = false\n\nclickAreas = {}\nDamagedSortingMode = 1 -- Define default sorting mode for damaged elements. 1 to sort by damage amount, 2 to sort by element id, 3 to sort by damage percent, \nBrokenSortingMode = 1 -- Define default sorting mode for broken elements. 1 to sort by damage amount, 2 to sort by element id\n\nHUDMode = false -- Is Hud active?\nhudSelectedIndex = 0 -- Which element is selected?\nhudSelectedType = 0 -- Is selected element damaged (1) or broken (2)\nhudArrowSticker = {}\nhighlightOn = false\nhighlightID = 0\nhighlightX = 0\nhighlightY = 0\nhighlightZ = 0\n\nCurrentDamagedPage = 1\nCurrentBrokenPage = 1\n\ncoreWorldOffset = 0\ntotalShipHP = 0\ntotalShipMaxHP = 0\ntotalShipIntegrity = 100\nelementsId = {}\ndamagedElements = {}\nbrokenElements = {}\nElementCounter = 0\nhealthyElements = 0\n\nOkayCenterMessage = \"All systems nominal.\"\n\n-----------------------------------------------\n-- FUNCTIONS\n-----------------------------------------------\n\nfunction GenerateCommaValue(amount)\n    local formatted = amount\n    while true do\n        formatted, k = string.gsub(formatted, \"^(-?%d+)(%d%d%d)\", '%1,%2')\n        if (k == 0) then break end\n    end\n    return formatted\nend\n\nfunction PrintDebug(output, highlight)\n    highlight = highlight or false\n    if DebugMode then\n        if highlight then\n            system.print(\n                \"------------------------------------------------------------------------\")\n        end\n        system.print(output)\n        if highlight then\n            system.print(\n                \"------------------------------------------------------------------------\")\n        end\n    end\nend\n\nfunction PrintError(output) system.print(output) end\n\nfunction DrawCenteredText(output)\n    for i = 1, #screens, 1 do screens[i].setCenteredText(output) end\nend\n\nfunction DrawSVG(output) for i = 1, #screens, 1 do screens[i].setSVG(output) end end\n\nfunction ClearConsole() for i = 1, 10, 1 do PrintDebug() end end\n\nfunction SwitchScreens(state)\n    state = state or true\n    if #screens > 0 then\n        for i = 1, #screens, 1 do\n            if state==true then\n                screens[i].clear()\n                screens[i].activate()\n            else\n                screens[i].deactivate()\n                screens[i].clear()\n            end\n        end\n    end\nend\n\nfunction InitiateSlots()\n    for slot_name, slot in pairs(unit) do\n        if type(slot) == \"table\" and type(slot.export) == \"table\" and\n            slot.getElementClass then\n            if slot.getElementClass():lower():find(\"coreunit\") then\n                core = slot\n                local coreHP = core.getMaxHitPoints()\n                if coreHP > 10000 then\n                    coreWorldOffset = 128\n                elseif coreHP > 1000 then\n                    coreWorldOffset = 64\n                elseif coreHP > 150 then\n                    coreWorldOffset = 32\n                else\n                    coreWorldOffset = 16\n                end\n            end\n            if slot.getElementClass():lower():find(\"screenunit\") then\n                screens[#screens + 1] = slot\n            end\n        end\n    end\nend\n\nfunction AddClickArea(newEntry) table.insert(clickAreas, newEntry) end\n\nfunction RemoveFromClickAreas(candidate)\n    for k, v in pairs(clickAreas) do\n        if v.id == candidate then\n            clickAreas[k] = nil\n            break\n        end\n    end\nend\n\nfunction UpdateClickArea(candidate, newEntry)\n    for k, v in pairs(clickAreas) do\n        if v.id == candidate then\n            clickAreas[k] = newEntry\n            break\n        end\n    end\nend\n\nfunction DisableClickArea(candidate)\n    for k, v in pairs(clickAreas) do\n        if v.id == candidate then\n            UpdateClickArea(candidate, {\n                id = candidate,\n                x1 = -1,\n                x2 = -1,\n                y1 = -1,\n                y2 = -1\n            })\n            break\n        end\n    end\nend\n\nfunction InitiateClickAreas()\n    clickAreas = {}\n    AddClickArea({id = \"DamagedDamage\", x1 = 725, x2 = 870, y1 = 380, y2 = 415})\n    AddClickArea({id = \"DamagedHealth\", x1 = 520, x2 = 655, y1 = 380, y2 = 415})\n    AddClickArea({id = \"DamagedID\", x1 = 90, x2 = 150, y1 = 380, y2 = 415})\n    AddClickArea({id = \"BrokenDamage\", x1 = 1675, x2 = 1835, y1 = 380, y2 = 415})\n    AddClickArea({id = \"BrokenID\", x1 = 1050, x2 = 1110, y1 = 380, y2 = 415})\n    AddClickArea({id = \"ToggleSimulation\", x1 = 65, x2 = 660, y1 = 100, y2 = 145})\n    AddClickArea({id = \"ToggleSimulation2\", x1 = 1650, x2 = 1850, y1 = 75, y2 = 117})\n    AddClickArea({id = \"ToggleElementLabel\", x1 = 225, x2 = 460, y1 = 380, y2 = 415})\n    AddClickArea({id = \"ToggleElementLabel2\", x1 = 1185, x2 = 1440, y1 = 380, y2 = 415})\n    AddClickArea({id = \"ToggleHudMode\", x1 = 1650, x2 = 1850, y1 = 125, y2 = 167})\n    AddClickArea({id = \"DamagedPageDown\", x1 = -1, x2 = -1, y1 = -1, y2 = -1})\n    AddClickArea({id = \"DamagedPageUp\", x1 = -1, x2 = -1, y1 = -1, y2 = -1})\n    AddClickArea({id = \"BrokenPageDown\", x1 = -1, x2 = -1, y1 = -1, y2 = -1})\n    AddClickArea({id = \"BrokenPageUp\", x1 = -1, x2 = -1, y1 = -1, y2 = -1})\nend\n\nfunction FlushClickAreas() clickAreas = {} end\n\nfunction CheckClick(x, y, HitTarget)\n    HitTarget = HitTarget or \"\"\n    if HitTarget == \"\" then\n        for k, v in pairs(clickAreas) do\n            if v and x >= v.x1 and x <= v.x2 and y >= v.y1 and y <= v.y2 then\n                HitTarget = v.id\n                break\n            end\n        end\n    end\n    if HitTarget == \"DamagedDamage\" then\n        DamagedSortingMode = 1\n        CurrentDamagedPage = 1\n        SortTables()\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"DamagedHealth\" then\n        DamagedSortingMode = 3\n        CurrentDamagedPage = 1\n        SortTables()\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"DamagedID\" then\n        DamagedSortingMode = 2\n        CurrentDamagedPage = 1\n        SortTables()\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"BrokenDamage\" then\n        BrokenSortingMode = 1\n        CurrentBrokenPage = 1\n        SortTables()\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"BrokenID\" then\n        BrokenSortingMode = 2\n        CurrentBrokenPage = 1\n        SortTables()\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"DamagedPageDown\" then\n        CurrentDamagedPage = CurrentDamagedPage + 1\n        if CurrentDamagedPage > math.ceil(#damagedElements / 12) then\n            CurrentDamagedPage = math.ceil(#damagedElements / 12)\n        end\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"DamagedPageUp\" then\n        CurrentDamagedPage = CurrentDamagedPage - 1\n        if CurrentDamagedPage < 1 then CurrentDamagedPage = 1 end\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"BrokenPageDown\" then\n        CurrentBrokenPage = CurrentBrokenPage + 1\n        if CurrentBrokenPage > math.ceil(#brokenElements / 12) then\n            CurrentBrokenPage = math.ceil(#brokenElements / 12)\n        end\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"BrokenPageUp\" then\n        CurrentBrokenPage = CurrentBrokenPage - 1\n        if CurrentBrokenPage < 1 then CurrentBrokenPage = 1 end\n        HudDeselectElement()\n        DrawScreens()\n    elseif HitTarget == \"ToggleHudMode\" then\n        if HUDMode == true then\n            HUDMode = false\n            forceRedraw = true\n            HudDeselectElement()\n            DrawScreens()\n        else\n            HUDMode = true\n            forceRedraw = true\n            HudDeselectElement()\n            DrawScreens()\n        end\n    elseif HitTarget == \"ToggleSimulation\" or HitTarget == \"ToggleSimulation2\" then\n        CurrentDamagedPage = 1\n        CurrentBrokenPage = 1\n        if SimulationMode == true then\n            SimulationMode = false\n            SimulationActive = false\n            GenerateDamageData()\n            forceRedraw = true\n            HudDeselectElement()\n            DrawScreens()\n        else\n            SimulationMode = true\n            SimulationActive = false\n            GenerateDamageData()\n            forceRedraw = true\n            HudDeselectElement()\n            DrawScreens()\n        end\n    elseif HitTarget == \"ToggleElementLabel\" or HitTarget ==\n        \"ToggleElementLabel2\" then\n        if UseMyElementNames == true then\n            UseMyElementNames = false\n            SimulationActive = false\n            GenerateDamageData()\n            forceRedraw = true\n            HudDeselectElement()\n            DrawScreens()\n        else\n            UseMyElementNames = true\n            SimulationActive = false\n            GenerateDamageData()\n            forceRedraw = true\n            HudDeselectElement()\n            DrawScreens()\n        end\n    end\nend\n\nfunction ToggleHUD()\n    HideHighlight()\n    CheckClick(nil, nil, \"ToggleHudMode\")\nend\n\nfunction HudDeselectElement()\n    if HUDMode == true then\n        hudSelectedType = 0\n        hudSelectedIndex = 0\n        HideHighlight()\n        DrawScreens()\n    end\nend\n\nfunction ChangeHudSelectedElement(step)\n    if HUDMode == true and (#damagedElements or #brokenElements) then\n        local damagedElementsHUD = 12\n        if #damagedElements < 12 then\n            damagedElementsHUD = #damagedElements\n        end\n        local brokenElementsHUD = 12\n        if #brokenElements < 12 then brokenElementsHUD = #brokenElements end\n        if step == 1 then\n            if hudSelectedIndex == 0 then\n                if damagedElementsHUD > 0 then\n                    hudSelectedType = 1\n                    hudSelectedIndex = 1\n                elseif brokenElementsHUD > 0 then\n                    hudSelectedType = 2\n                    hudSelectedIndex = 1\n                end\n            elseif hudSelectedType == 1 then\n                if damagedElementsHUD > hudSelectedIndex then\n                    hudSelectedIndex = hudSelectedIndex + 1\n                elseif brokenElementsHUD > 0 then\n                    hudSelectedType = 2\n                    hudSelectedIndex = 1\n                elseif damagedElementsHUD > 0 then\n                    hudSelectedIndex = 1\n                end\n            elseif hudSelectedType == 2 then\n                if brokenElementsHUD > hudSelectedIndex then\n                    hudSelectedIndex = hudSelectedIndex + 1\n                elseif damagedElementsHUD > 0 then\n                    hudSelectedType = 1\n                    hudSelectedIndex = 1\n                elseif brokenElementsHUD > 0 then\n                    hudSelectedIndex = 1\n                end\n            end\n        elseif step == -1 then\n            if hudSelectedIndex == 0 then\n                if brokenElementsHUD > 0 then\n                    hudSelectedType = 2\n                    hudSelectedIndex = 1\n                elseif damagedElementsHUD > 0 then\n                    hudSelectedType = 1\n                    hudSelectedIndex = 1\n                end\n            elseif hudSelectedType == 1 then\n                if hudSelectedIndex > 1 then\n                    hudSelectedIndex = hudSelectedIndex - 1\n                elseif brokenElementsHUD > 0 then\n                    hudSelectedType = 2\n                    hudSelectedIndex = brokenElementsHUD\n                elseif damagedElementsHUD > 0 then\n                    hudSelectedIndex = damagedElementsHUD\n                end\n            elseif hudSelectedType == 2 then\n                if hudSelectedIndex > 1 then\n                    hudSelectedIndex = hudSelectedIndex - 1\n                elseif damagedElementsHUD > 0 then\n                    hudSelectedType = 1\n                    hudSelectedIndex = damagedElementsHUD\n                elseif brokenElementsHUD > 0 then\n                    hudSelectedIndex = brokenElementsHUD\n                end\n            end\n        end\n        HighlightElement()\n        DrawScreens()\n        -- PrintDebug(\"-> Type: \"..hudSelectedType.. \" Index: \"..hudSelectedIndex)\n    end\nend\n\nfunction HideHighlight()\n    if #hudArrowSticker > 0 then\n        for i in pairs(hudArrowSticker) do\n            core.deleteSticker(hudArrowSticker[i])\n        end\n        hudArrowSticker = {}\n    end\nend\n\nfunction ShowHighlight()\n    if highlightOn == true and highlightID > 0 then\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX + 2,\n                                                             highlightY,\n                                                             highlightZ, \"north\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY - 2,\n                                                             highlightZ, \"east\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX - 2,\n                                                             highlightY,\n                                                             highlightZ, \"south\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY + 2,\n                                                             highlightZ, \"west\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY,\n                                                             highlightZ - 2,\n                                                             \"up\"))\n        table.insert(hudArrowSticker, core.spawnArrowSticker(highlightX,\n                                                             highlightY,\n                                                             highlightZ + 2,\n                                                             \"down\"))\n    end\nend\n\nfunction ToggleHighlight()\n    if highlightOn == true then\n        highlightOn = false\n        HideHighlight()\n    else\n        highlightOn = true\n        ShowHighlight()\n    end\nend\n\nfunction HighlightElement(elementID)\n    elementID = elementID or 0\n    local targetElement = {}\n\n    if elementID == 0 then\n        if hudSelectedType == 1 then\n            elementID = damagedElements[(CurrentDamagedPage - 1) * 12 +\n                            hudSelectedIndex].id\n        elseif hudSelectedType == 2 then\n            elementID = brokenElements[(CurrentBrokenPage - 1) * 12 +\n                            hudSelectedIndex].id\n        end\n\n        if elementID ~= 0 then\n            local bFound = false\n            for k, v in pairs(damagedElements) do\n                if v.id == elementID then\n                    targetElement = v\n                    bFound = true\n                    break\n                end\n            end\n            if bFound == false then\n                for k, v in pairs(brokenElements) do\n                    if v.id == elementID then\n                        targetElement = v\n                        bFound = true\n                        break\n                    end\n                end\n            end\n\n            if bFound == true and AllowElementHighlighting == true then\n                HideHighlight()\n                elementPosition = vec3(targetElement.pos)\n                highlightX = elementPosition.x - coreWorldOffset\n                highlightY = elementPosition.y - coreWorldOffset\n                highlightZ = elementPosition.z - coreWorldOffset\n                highlightID = targetElement.id\n                highlightOn = true\n                ShowHighlight()\n            end\n        end\n    end\nend\n\nfunction SortTables()\n    -- Sort damaged elements descending by percent damaged according to setting\n    if DamagedSortingMode == 1 then\n        table.sort(damagedElements,\n                   function(a, b) return a.missinghp > b.missinghp end)\n    elseif DamagedSortingMode == 2 then\n        table.sort(damagedElements, function(a, b) return a.id < b.id end)\n    else\n        table.sort(damagedElements,\n                   function(a, b) return a.percent < b.percent end)\n    end\n\n    -- Sort broken elements descending according to setting\n    if BrokenSortingMode == 1 then\n        table.sort(brokenElements, function(a, b)\n            return a.maxhp > b.maxhp\n        end)\n    else\n        table.sort(brokenElements, function(a, b) return a.id < b.id end)\n    end\nend\n\nfunction GenerateDamageData()\n    if SimulationActive == true then return end\n\n    local formerTotalShipHP = totalShipHP\n    totalShipHP = 0\n    totalShipMaxHP = 0\n    totalShipIntegrity = 100\n    elementsId = {}\n    damagedElements = {}\n    brokenElements = {}\n    ElementCounter = 0\n    healthyElements = 0\n\n    elementsIdList = core.getElementIdList()\n\n    for _, id in pairs(elementsIdList) do\n        ElementCounter = ElementCounter + 1\n        idHP = core.getElementHitPointsById(id) or 0\n        idMaxHP = core.getElementMaxHitPointsById(id) or 0\n\n        if SimulationMode then\n            SimulationActive = true\n            local dice = math.random(0, 10)\n            if dice < 2 then\n                idHP = 0\n            elseif dice >= 2 and dice < 5 then\n                idHP = idMaxHP\n            else\n                idHP = math.random(1, math.ceil(idMaxHP))\n            end\n        end\n\n        totalShipHP = totalShipHP + idHP\n        totalShipMaxHP = totalShipMaxHP + idMaxHP\n\n        idName = core.getElementNameById(id)\n        idType = core.getElementTypeById(id)\n\n        -- Is element damaged?\n        if idMaxHP > idHP then\n            idPos = core.getElementPositionById(id)\n            if idHP > 0 then\n                table.insert(damagedElements, {\n                    id = id,\n                    name = idName,\n                    type = idType,\n                    counter = ElementCounter,\n                    hp = idHP,\n                    maxhp = idMaxHP,\n                    missinghp = idMaxHP - idHP,\n                    percent = math.ceil(100 / idMaxHP * idHP),\n                    pos = idPos\n                })\n                -- if DebugMode then PrintDebug(\"Damaged: \"..idName..\" --- Type: \"..idType..\"\") end\n                -- Is element broken?\n            else\n                table.insert(brokenElements, {\n                    id = id,\n                    name = idName,\n                    type = idType,\n                    counter = ElementCounter,\n                    hp = idHP,\n                    maxhp = idMaxHP,\n                    missinghp = idMaxHP - idHP,\n                    percent = 0,\n                    pos = idPos\n                })\n                -- if DebugMode then PrintDebug(\"Broken: \"..idName..\" --- Type: \"..idType..\"\") end\n            end\n        else\n            healthyElements = healthyElements + 1\n            if id == highlightID then\n                highlightID = 0\n            end\n        end\n    end\n\n    -- Sort tables by current settings    \n    SortTables()\n\n    -- Update clickAreas\n\n    -- Determine total ship integrity\n    totalShipIntegrity = string.format(\"%2.0f\",\n                                       100 / totalShipMaxHP * totalShipHP)\n\n    -- Has anything changes since last check? If yes, force redrawing the screens\n    if formerTotalShipHP ~= totalShipHP then\n        forceRedraw = true\n        formerTotalShipHP = totalShipHP\n    else\n        forceRedraw = false\n    end\nend\n\nfunction GetAllSystemsNominalBackground()\n    local output = \"\"\n    output = output .. [[<g>\n    <g>\n      <path d=\"M53.44,153.77H42.76a106.89,106.89,0,0,0,93.12,103.29V246.28C90.47,239.59,54.84,200,53.44,153.77Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #39b54a\"/>\n      <path d=\"M256.79,153.77H246.1c-1.39,46.23-36.76,85.82-82.17,92.51v10.78C214.68,250.4,255.37,206.61,256.79,153.77Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <path d=\"M42.76,147.09H53.44c1.4-46.23,37-85.82,82.44-92.51V43.8A106.89,106.89,0,0,0,42.76,147.09Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <path d=\"M246.1,147.09h10.69c-1.42-52.84-42.11-96.63-92.86-103.29V54.58C209.34,61.27,244.7,100.86,246.1,147.09Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <rect x=\"148.06\" y=\"46.11\" width=\"3.56\" height=\"6.08\" transform=\"translate(99.15 188.8) rotate(-90)\" style=\"fill: #fff;opacity: 0.30000000000000004\"/>\n      <rect x=\"148.06\" y=\"249.01\" width=\"3.56\" height=\"6.08\" transform=\"translate(-103.76 391.7) rotate(-90)\" style=\"fill: #fff;opacity: 0.30000000000000004\"/>\n    </g>\n    <g>\n      <path d=\"M42.19,252.92l13.59-13.51c-1.63-1.74-3.2-3.56-4.73-5.4l-6.51,6.47a128.44,128.44,0,0,1-32.63-80h9.23c-.18-2.4-.32-4.81-.37-7.23H1.55A148.7,148.7,0,0,0,42.19,252.92Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <path d=\"M42.19,47.69,55.78,61.15c-1.63,1.75-3.2,3.55-4.73,5.39l-6.51-6.45a127.9,127.9,0,0,0-32.63,79.75h9.23c-.18,2.39-.32,4.79-.37,7.21H1.55A148.05,148.05,0,0,1,42.19,47.69Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <path d=\"M257.36,47.69l-13.59,13.5c1.63,1.75,3.2,3.56,4.73,5.4L255,60.12a128.37,128.37,0,0,1,32.62,80h-9.22c.18,2.4.32,4.8.37,7.22H298A148.67,148.67,0,0,0,257.36,47.69Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <path d=\"M257.36,254.84l-13.59-13.47c1.63-1.74,3.2-3.55,4.73-5.38l6.51,6.45a127.83,127.83,0,0,0,32.62-79.76h-9.22c.18-2.39.32-4.79.37-7.2H298A148.07,148.07,0,0,1,257.36,254.84Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <g>\n        <path d=\"M53.42,249.89l-.68.68a139.89,139.89,0,0,0,91,40v-1A139,139,0,0,1,53.42,249.89Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M246.33,253.27l-.68-.69a138.82,138.82,0,0,1-90.28,37.13v1A139.78,139.78,0,0,0,246.33,253.27Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M52.78,50.25l.68.68a139,139,0,0,1,90.24-39.7v-1A139.89,139.89,0,0,0,52.78,50.25Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M245.61,48.23l.68-.67a139.77,139.77,0,0,0-90.92-37.37v1A138.86,138.86,0,0,1,245.61,48.23Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n      </g>\n    </g>\n    <g>\n      <g style=\"opacity: 0.30000000000000004\">\n        <path d=\"M233.5,150.76v.05c0,.4,0,.8,0,1.2l-6-.08v-1.12Zm-.34-7.5-6,.54c0-.39-.07-.78-.11-1.16l6-.63Zm-.11,16.24c0,.42-.09.83-.14,1.25l-6-.71c0-.39.09-.77.13-1.15Zm-1.13-24.91L226,135.74c-.07-.38-.15-.75-.23-1.13l5.89-1.25C231.76,133.77,231.84,134.18,231.92,134.59Zm-.22,33.57-.27,1.23-5.87-1.34.24-1.13Zm-1.92-42.07L224,127.86c-.11-.37-.23-.74-.35-1.1l5.73-1.86C229.53,125.29,229.66,125.69,229.78,126.09Zm-.34,50.54-.39,1.18-5.71-1.93c.13-.37.25-.74.37-1.11Zm-2.68-58.76-5.53,2.37c-.15-.36-.31-.71-.46-1.06l5.49-2.46C226.43,117.1,226.6,117.48,226.76,117.87Zm-.46,66.95c-.17.38-.34.76-.52,1.14l-5.46-2.53.48-1.06ZM222.9,110,217.64,113l-.57-1,5.21-3C222.49,109.29,222.7,109.65,222.9,110Zm-.58,82.61-.63,1.08-5.17-3.09.59-1Zm-4.09-90-4.92,3.48c-.22-.32-.45-.64-.68-1l4.87-3.54C217.75,101.92,218,102.26,218.23,102.6ZM217.55,200l-.74,1-4.83-3.6c.24-.31.47-.63.7-.94ZM212.81,95.72l-4.53,4-.77-.87,4.47-4C212.26,95.09,212.54,95.4,212.81,95.72ZM212,206.79c-.27.31-.55.61-.83.92l-4.43-4.09.79-.86ZM206.71,89.44l-4.09,4.41c-.29-.26-.57-.53-.86-.78l4-4.48C206.1,88.87,206.41,89.15,206.71,89.44ZM205.84,213c-.3.28-.62.55-.93.83l-4-4.53c.29-.26.58-.51.87-.78ZM200,83.81l-3.61,4.83-.94-.7L199,83.07Zm-.94,134.7-1,.72-3.48-4.91.95-.68ZM192.71,78.92l-3.08,5.18-1-.6,3-5.21Zm-1,144.37-1.08.62-2.95-5.25c.34-.19.68-.38,1-.58ZM185,74.83l-2.53,5.46-1.07-.48,2.46-5.5Zm-1.06,152.45-1.14.5-2.37-5.53,1.06-.47ZM176.82,71.56l-1.93,5.7-1.11-.37,1.86-5.73Zm-1.08,158.87-1.19.38-1.78-5.75,1.11-.36ZM168.4,69.17,167.06,75l-1.13-.25,1.24-5.89ZM167.28,232.7l-1.22.25L164.89,227l1.14-.23Zm-7.52-165-.7,6-1.16-.13.61-6Zm-1.13,166.39c-.42.05-.83.09-1.25.12l-.54-6,1.16-.12ZM151,67.1l-.08,6h-1.38v-6H151Zm-1.14,167.43h-1.25l.09-6h1.05ZM142.61,73.44c-.39,0-.78.07-1.16.12l-.64-6,1.24-.13Zm-.86,154.67-.61,6-1.25-.14.71-6ZM134.56,74.6l-1.14.24L132.16,69l1.22-.26Zm-.84,152.25-1.24,5.9-1.22-.27,1.32-5.87Zm-7-150.25-1.11.36-1.87-5.73,1.19-.38Zm-.82,148.17L124,230.5l-1.2-.4,1.94-5.7Zm-6.8-145.35-1.06.47-2.46-5.5,1.14-.5Zm-.79,142.44-2.45,5.5-1.14-.51,2.53-5.47ZM111.78,83l-1,.58-3-5.21,1.08-.62ZM111,218.17l-3,5.22c-.37-.21-.73-.42-1.08-.64l3.08-5.17Zm-6.11-130.8L104,88l-3.56-4.85,1-.74Zm-.72,126.37-3.53,4.88-1-.75,3.62-4.81ZM98.53,92.41c-.3.25-.58.51-.87.77l-4-4.47.94-.83Zm-.67,116.22-4,4.48-.92-.84L97,207.85ZM92.7,98.09l-.78.85-4.48-4,.85-.93Zm-.59,104.8-4.47,4c-.28-.31-.56-.62-.83-.94l4.52-4ZM87.5,104.34l-.69.93-4.87-3.53c.24-.34.49-.68.74-1ZM87,196.58l-4.87,3.55-.73-1,4.92-3.48ZM83,111.1c-.2.33-.4.66-.59,1l-5.22-3c.21-.36.42-.72.64-1.08Zm-.45,78.67-5.21,3c-.21-.36-.41-.72-.61-1.09L82,188.77Zm-3.34-71.48c-.17.35-.33.71-.48,1.06l-5.51-2.44c.17-.38.34-.76.52-1.14Zm-.37,64.25L73.33,185c-.17-.38-.34-.76-.5-1.14l5.53-2.38C78.51,181.84,78.67,182.19,78.82,182.54Zm-2.65-56.69c-.12.36-.25.73-.37,1.1l-5.73-1.84c.13-.4.26-.8.4-1.2ZM75.9,175l-5.72,1.88c-.13-.4-.26-.8-.38-1.2l5.75-1.78C75.66,174.23,75.78,174.6,75.9,175ZM74,133.67c-.08.38-.17.76-.25,1.14l-5.89-1.23c.08-.41.17-.82.26-1.23Zm-.18,33.45-5.89,1.25c-.09-.4-.17-.81-.25-1.22l5.9-1.17ZM72.6,141.69l-.12,1.15-6-.61c0-.41.08-.83.13-1.24Zm-.09,17.4-6,.63-.12-1.24,6-.55C72.43,158.32,72.47,158.7,72.51,159.09Zm-.43-9.29c0,.34,0,.68,0,1V151h-6v-.16c0-.36,0-.72,0-1.08Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n      </g>\n      <path d=\"M214,150.43a62,62,0,0,1-1.74,14.45h25.38a84.15,84.15,0,0,0,0-28.9H212.29A62,62,0,0,1,214,150.43Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: none\"/>\n      <path d=\"M60.63,150.43A85.14,85.14,0,0,1,61.88,136H59.43a86.89,86.89,0,0,0,0,28.9h2.45A85.14,85.14,0,0,1,60.63,150.43Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff;opacity: 0.30000000000000004\"/>\n      <g>\n        <path d=\"M149.77,239.28a88.72,88.72,0,0,1-87.23-70.79H60.07a91.56,91.56,0,0,0,179.4,0H237A88.72,88.72,0,0,1,149.77,239.28Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n        <path d=\"M149.77,59.17a91.28,91.28,0,0,0-89.7,73.2h2.47a89.15,89.15,0,0,1,174.47,0h2.46A91.26,91.26,0,0,0,149.77,59.17Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      </g>\n      <path d=\"M238.92,150.43a85.14,85.14,0,0,1-1.25,14.45h2.45a87.6,87.6,0,0,0,0-28.9h-2.45A85.14,85.14,0,0,1,238.92,150.43Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff;opacity: 0.30000000000000004\"/>\n      <path d=\"M150,81.42a59.07,59.07,0,0,1,15.66,2V80.66a64.13,64.13,0,0,0-31.31,0v2.77A59,59,0,0,1,150,81.42Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <path d=\"M165.61,220.61v-2.76a62.27,62.27,0,0,1-31.31,0v2.76a64.13,64.13,0,0,0,31.31,0Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #0a0\"/>\n      <path d=\"M219.1,150.64c0,31-21,57.33-48.67,66.1v2.8c28.9-8.86,51.37-36.39,51.37-68.9s-22.47-60-51.37-68.91v2.8C198.12,93.3,219.1,119.62,219.1,150.64Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff;opacity: 0.30000000000000004\"/>\n      <path d=\"M80.8,150.64c0-31,21-57.34,48.68-66.11v-2.8c-28.9,8.86-51.37,36.39-51.37,68.91s22.47,60,51.37,68.9v-2.8C101.78,208,80.8,181.65,80.8,150.64Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff;opacity: 0.30000000000000004\"/>\n    </g>\n    <g>\n      <g>\n        <g style=\"opacity: 0.30000000000000004\">\n          <path d=\"M187.86,269.7l1.71-.15V267l-2.12.27a136.63,136.63,0,0,1-26.5,4.77v2.44A141.27,141.27,0,0,0,187.86,269.7Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n          <path d=\"M112.18,267.29l-2.13-.27v2.53l1.72.15a141.27,141.27,0,0,0,26.91,4.8v-2.44A136.63,136.63,0,0,1,112.18,267.29Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n          <path d=\"M111.77,31.16l-1.72.15v2.53l2.13-.27a137.39,137.39,0,0,1,26.5-4.77V26.36A141.27,141.27,0,0,0,111.77,31.16Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n          <path d=\"M187.45,33.57l2.12.27V31.31l-1.71-.15A141.27,141.27,0,0,0,161,26.36V28.8A137.39,137.39,0,0,1,187.45,33.57Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        </g>\n        <g>\n          <path d=\"M146.63,272.35v1.53l2.39,0,2.38,0v-1.53h-4.77Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n          <path d=\"M146.63,26.71v1.53h4.77V26.71l-2.38,0Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        </g>\n      </g>\n      <g>\n        <path d=\"M271.12,181h-.88a126.46,126.46,0,0,1-69.53,84v.92A129.61,129.61,0,0,0,271.12,181Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M29.25,181h-.88c9.63,38.16,37.15,69.48,70.55,84.87v-.92A126.62,126.62,0,0,1,29.25,181Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M270.35,119h.87c-9.54-38.17-37.12-67.24-70.51-82.67v1.17C234.1,53.07,260.86,82.37,270.35,119Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M28.27,119h.87c9.49-36.58,36.38-65.88,69.78-81.5V36.28C65.52,51.71,37.82,80.78,28.27,119Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n      </g>\n      <g>\n        <path d=\"M39.52,150.55a110.76,110.76,0,0,1,1.73-19.31c-.24-.26-.48-.54-.71-.83a110,110,0,0,0,0,40.28,10.31,10.31,0,0,1,.73-.75A109.68,109.68,0,0,1,39.52,150.55Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M258.24,131.35a107.85,107.85,0,0,1,0,38.59,8.69,8.69,0,0,1,.75.61,109.09,109.09,0,0,0,0-39.85A9.05,9.05,0,0,1,258.24,131.35Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n      </g>\n      <g>\n        <path d=\"M31.66,150.55a118.63,118.63,0,0,1,1.85-20.69c-.26-.28-.52-.57-.76-.88a117.32,117.32,0,0,0,0,43.14c.24-.27.5-.54.77-.8A118.5,118.5,0,0,1,31.66,150.55Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n        <path d=\"M266,130a116.09,116.09,0,0,1,0,41.34c.28.21.55.43.8.66a116.68,116.68,0,0,0,0-42.7C266.52,129.53,266.26,129.76,266,130Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n      </g>\n      <g style=\"opacity: 0.30000000000000004\">\n        <rect x=\"25.83\" y=\"176.23\" width=\"17.38\" height=\"0.55\" transform=\"translate(-116.25 65.92) rotate(-45)\" style=\"fill: #fff\"/>\n      </g>\n      <g style=\"opacity: 0.30000000000000004\">\n        <rect x=\"34.24\" y=\"116.94\" width=\"0.55\" height=\"17.38\" transform=\"translate(-80.28 51.02) rotate(-45)\" style=\"fill: #fff\"/>\n      </g>\n      <g style=\"opacity: 0.30000000000000004\">\n        <path d=\"M259,132.05a.27.27,0,0,1-.2-.08.29.29,0,0,1,0-.39l12.29-12.28a.27.27,0,0,1,.39,0,.26.26,0,0,1,0,.38L259.18,132A.24.24,0,0,1,259,132.05Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n      </g>\n      <g style=\"opacity: 0.30000000000000004\">\n        <path d=\"M271.28,182.92a.27.27,0,0,1-.2-.08l-12.29-12.29a.28.28,0,0,1,0-.38.27.27,0,0,1,.39,0l12.29,12.28a.27.27,0,0,1,0,.39A.24.24,0,0,1,271.28,182.92Z\" transform=\"translate(-1.55 -10.19)\" style=\"fill: #fff\"/>\n      </g>\n    </g>\n  </g>]]\n    return output\nend\n\nfunction GetDRLogo()\n    output =\n        [[<defs><style>.a{fill:#fff;}.b{fill:red;}</style></defs><path class=\"a\" d=\"M8.94,1.94c3,0,5.35.84,6.94,2.54s2.37,4.3,2.37,7.81-.79,6.09-2.37,7.78S12,22.61,8.94,22.61H1.65A1.5,1.5,0,0,1-.07,20.93V3.62A1.5,1.5,0,0,1,1.65,1.94ZM3.55,18.63c0,.25.13.37.39.37h5a5.41,5.41,0,0,0,4.35-1.59c.9-1.07,1.35-2.78,1.35-5.15s-.45-4.08-1.34-5.13S11,5.55,8.94,5.55h-5c-.26,0-.39.12-.39.37Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"a\" d=\"M23.34,22.61h-4c2.91-7.35,4.36-11,7.26-18.38a3.88,3.88,0,0,1,1.64-2.06A5.46,5.46,0,0,1,31,1.57a5.34,5.34,0,0,1,2.68.6,3.71,3.71,0,0,1,1.61,2.06c2.8,7.36,4.19,11,7,18.38h-4C35.71,16,34.46,12.63,31.94,6a1,1,0,0,0-1-.7,1.05,1.05,0,0,0-1,.7Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"a\" d=\"M48.85,22.61H45.27V6.19a4.66,4.66,0,0,1,1.22-3.35,5,5,0,0,1,3.74-1.27,5.29,5.29,0,0,1,3.49,1.06,5.19,5.19,0,0,1,1.72,3c1.16,5.06,1.75,7.59,2.91,12.65a1.32,1.32,0,0,0,1.38,1.17,1.36,1.36,0,0,0,1.38-1.17C62.27,13.23,62.85,10.7,64,5.64a5.33,5.33,0,0,1,1.64-3A5,5,0,0,1,69.1,1.57a5,5,0,0,1,3.74,1.27,4.62,4.62,0,0,1,1.22,3.35V22.61H70.48V6.38a1.28,1.28,0,0,0-.38-1A1.59,1.59,0,0,0,69,5.06a1.47,1.47,0,0,0-1,.29,1.48,1.48,0,0,0-.46.81c-1.19,5.06-1.78,7.59-3,12.66A6.1,6.1,0,0,1,63,21.92,4.62,4.62,0,0,1,59.7,23a4.86,4.86,0,0,1-3.36-1.07,5.88,5.88,0,0,1-1.64-3.09c-1.17-5.07-1.76-7.6-2.94-12.66a1.5,1.5,0,0,0-.47-.81,1.52,1.52,0,0,0-1-.29,1.54,1.54,0,0,0-1.08.35,1.25,1.25,0,0,0-.39,1Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"a\" d=\"M81.11,22.61h-4L84.39,4.23A3.84,3.84,0,0,1,86,2.17a6.35,6.35,0,0,1,5.39,0A3.75,3.75,0,0,1,93,4.23c2.79,7.36,4.19,11,7,18.38H96L89.72,6a1,1,0,0,0-1-.7,1.05,1.05,0,0,0-1,.7C85,12.63,83.73,16,81.11,22.61Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"a\" d=\"M118.94,1.94V5.55h-8.51a5.48,5.48,0,0,0-4.37,1.58q-1.36,1.58-1.36,5.16t1.35,5.13c.89,1,2.35,1.58,4.38,1.58h3.43a2.71,2.71,0,0,0,2.2-.81,3.17,3.17,0,0,0,.68-2.1,2.79,2.79,0,0,0-.63-1.95,2.47,2.47,0,0,0-1.92-.69H109.6V10.3h5a5.16,5.16,0,0,1,4.14,1.58A6.33,6.33,0,0,1,120,16.15a8.64,8.64,0,0,1-.35,2.53,5.28,5.28,0,0,1-1.13,2.05,5.54,5.54,0,0,1-2,1.38,7.63,7.63,0,0,1-3,.5h-3.18q-4.55,0-6.94-2.55t-2.41-7.77q0-5.23,2.41-7.8t6.94-2.55Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"a\" d=\"M140.69,1.94V5.55H130.34a3.36,3.36,0,0,0-2.39.71,2.51,2.51,0,0,0-.74,1.9c0,1.63,1,2.45,3.16,2.45h10.17v3.27H130.28c-2.11,0-3.16.84-3.16,2.52a2.45,2.45,0,0,0,.77,1.91,3.43,3.43,0,0,0,2.36.69h10.47v3.61H130.25a10.24,10.24,0,0,1-3.14-.42A6.06,6.06,0,0,1,125,21a4.34,4.34,0,0,1-1.22-1.8,6.3,6.3,0,0,1-.39-2.23,5.34,5.34,0,0,1,.77-3,4.8,4.8,0,0,1,2.2-1.79,4.57,4.57,0,0,1-2.91-4.66,6.39,6.39,0,0,1,.4-2.26,4.59,4.59,0,0,1,1.24-1.8,5.89,5.89,0,0,1,2.15-1.16,10.31,10.31,0,0,1,3.14-.41Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"b\" d=\"M156.56,1.94a8,8,0,0,1,3,.5,5.9,5.9,0,0,1,2.07,1.35,5.13,5.13,0,0,1,1.19,2,7.15,7.15,0,0,1,.39,2.35,8,8,0,0,1-.25,2,6.56,6.56,0,0,1-.76,1.81,5.63,5.63,0,0,1-3.37,2.46c1.92,3.31,2.88,5,4.81,8.27h-4c-1.88-3.19-2.83-4.79-4.71-8h-5.4a.46.46,0,0,0-.52.52v7.47h-3.61V14.43a3.46,3.46,0,0,1,.76-2.51,3.42,3.42,0,0,1,2.49-.76h8.05a3.14,3.14,0,0,0,1.32-.25,2.49,2.49,0,0,0,.89-.64,2.74,2.74,0,0,0,.5-.92,3.24,3.24,0,0,0,.17-1.07,2.87,2.87,0,0,0-.69-1.92,2.72,2.72,0,0,0-2.19-.81H145.35V1.94Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"b\" d=\"M183.79,1.94V5.55H173.44a3.38,3.38,0,0,0-2.39.71,2.51,2.51,0,0,0-.74,1.9c0,1.63,1.06,2.45,3.16,2.45h10.17v3.27H173.38c-2.11,0-3.16.84-3.16,2.52a2.45,2.45,0,0,0,.77,1.91,3.43,3.43,0,0,0,2.36.69h10.47v3.61H173.35a10.24,10.24,0,0,1-3.14-.42A6.06,6.06,0,0,1,168.06,21a4.34,4.34,0,0,1-1.22-1.8,6.3,6.3,0,0,1-.39-2.23,5.34,5.34,0,0,1,.77-3,4.85,4.85,0,0,1,2.2-1.79,4.57,4.57,0,0,1-2.91-4.66,6.39,6.39,0,0,1,.4-2.26,4.59,4.59,0,0,1,1.24-1.8,6,6,0,0,1,2.15-1.16,10.31,10.31,0,0,1,3.14-.41Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"b\" d=\"M199.05,1.94a8,8,0,0,1,3,.5,5.9,5.9,0,0,1,2.07,1.35,5.13,5.13,0,0,1,1.19,2,7.14,7.14,0,0,1,.38,2.35,7.79,7.79,0,0,1-.35,2.33,5.64,5.64,0,0,1-1.15,2.09,6.07,6.07,0,0,1-2.06,1.5,7.36,7.36,0,0,1-3.08.58h-6.44a.46.46,0,0,0-.52.52v7.47h-3.61V14.43a3.46,3.46,0,0,1,.76-2.51,3.42,3.42,0,0,1,2.49-.76h7.44a3.14,3.14,0,0,0,1.32-.25,2.58,2.58,0,0,0,.89-.64,2.84,2.84,0,0,0,.5-.9,3.41,3.41,0,0,0,.17-1.06,2.91,2.91,0,0,0-.69-1.95,2.68,2.68,0,0,0-2.16-.81H188.45V1.94Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"b\" d=\"M220.7,1.94c3,0,5.34.85,6.94,2.57s2.41,4.32,2.41,7.81-.8,6.06-2.41,7.75-3.91,2.54-6.94,2.54h-2.81c-3,0-5.34-.84-6.94-2.54s-2.41-4.28-2.41-7.75.8-6.09,2.41-7.81,3.91-2.57,6.94-2.57Zm-2.81,3.61a5.45,5.45,0,0,0-4.37,1.59c-.91,1.07-1.36,2.79-1.36,5.18s.45,4.08,1.35,5.12S215.86,19,217.89,19h2.81A5.44,5.44,0,0,0,225,17.42q1.36-1.58,1.36-5.13c0-2.37-.45-4.08-1.35-5.15s-2.34-1.59-4.35-1.59Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"b\" d=\"M245.46,1.94a8,8,0,0,1,3,.5,5.9,5.9,0,0,1,2.07,1.35,5.13,5.13,0,0,1,1.19,2,7.14,7.14,0,0,1,.38,2.35,8,8,0,0,1-.24,2,6.59,6.59,0,0,1-.77,1.81,5.51,5.51,0,0,1-1.34,1.48,5.82,5.82,0,0,1-2,1l4.81,8.27h-4l-4.72-8h-5.39a.46.46,0,0,0-.52.52v7.47h-3.61V14.43a3.46,3.46,0,0,1,.76-2.51,3.41,3.41,0,0,1,2.48-.76h8.06a3.14,3.14,0,0,0,1.32-.25,2.45,2.45,0,0,0,.88-.64,2.59,2.59,0,0,0,.51-.92,3.52,3.52,0,0,0,.17-1.07,2.87,2.87,0,0,0-.69-1.92,2.72,2.72,0,0,0-2.19-.81H234.24V1.94Z\" transform=\"translate(0.07 -1.57)\"/><path class=\"b\" d=\"M269.87,1.94V5.55h-6V22.61h-3.65V5.55h-6V1.94Z\" transform=\"translate(0.07 -1.57)\"/>]]\n    return output\nend\n\nfunction GenerateHUDOutput()\n\n    local hudWidth = 300\n    local hudHeight = 125\n    if #damagedElements > 0 or #brokenElements > 0 then hudHeight = 780 end\n    local screenHeight = 1080\n\n    local healthyColor = \"#00aa00\"\n    local brokenColor = \"#aa0000\"\n    local damagedColor = \"#aaaa00\"\n    local integrityColor = \"#aaaaaa\"\n    local healthyTextColor = \"white\"\n    local brokenTextColor = \"#ff4444\"\n    local damagedTextColor = \"#ffff44\"\n    local integrityTextColor = \"white\"\n\n    if #damagedElements == 0 then\n        damagedColor = \"#aaaaaa\"\n        damagedTextColor = \"white\"\n    end\n    if #brokenElements == 0 then\n        brokenColor = \"#aaaaaa\"\n        brokenTextColor = \"white\"\n    end\n\n    local hudOutput = \"\"\n\n    -- Draw Header\n    hudOutput = hudOutput .. [[<svg style=\"position:absolute;top:]] ..\n                    (math.ceil(screenHeight / 2 - hudHeight / 2)) ..\n                    [[;left:0;\" class=\"bootstrap\" viewBox=\"0 0 ]] .. hudWidth ..\n                    [[ ]] .. hudHeight .. [[\" width=\"]] .. hudWidth ..\n                    [[\" height=\"]] .. hudHeight .. [[\">\n            <defs><style>\n                  .fhudM1 { font-size: 18px; font-weight:bold; fill: black; text-anchor: middle}\n                  .fhudM2 { font-size: 15px; font-weight:bold; fill: white; text-anchor: middle}\n                  .fhudM3 { font-size: 12px; fill: #4e4e4e; text-anchor: start}\n                  .fhudM4 { font-size: 18px; fill: #00aa00; text-anchor: middle}\n                  .fmstartsmall { font-size: 15px; font-weight: bold; text-anchor: start; fill:black}\n                  .fmstartsmally { font-size: 15px; text-anchor: start; fill:yellow}\n                  .fmendsmall { font-size: 15px; font-weight: bold; text-anchor: end; fill: black } \n                  .fmendsmally { font-size: 15px; text-anchor: end; fill: yellow}\n                  .fmstartsmallr { font-size: 15px; text-anchor: start; fill: red}\n                  .fmendsmallr { font-size: 15px; text-anchor: end; fill: red}\n            </style></defs>]]\n\n    hudOutput = hudOutput .. [[<rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"]] ..\n                    hudWidth .. [[\" height=\"]] .. hudHeight ..\n                    [[\" style=\"fill: #1e1e1e;opacity: 0.8;\"/>]] ..\n                    [[<svg x=\"20\" y=\"15\">]] .. GetDRLogo() .. [[</svg>]]\n\n    hudOutput = hudOutput .. [[<svg x=\"0\" y=\"40\">\n                <rect x=\"10\" y=\"5\" rx=\"5\" ry=\"5\" width=\"80\" height=\"20\" style=\"fill: ]] ..\n                    healthyColor .. [[; stroke: #1e1e1e; stroke-width:1;\"/>\n                <text x=\"50\" y=\"21\" class=\"fhudM1\">]] .. healthyElements ..\n                    [[</text>\n                <rect x=\"115\" y=\"5\" rx=\"5\" ry=\"5\" width=\"80\" height=\"20\" style=\"fill: ]] ..\n                    damagedColor .. [[; stroke: #1e1e1e; stroke-width:1;\"/>\n                <text x=\"155\" y=\"21\" class=\"fhudM1\">]] .. #damagedElements ..\n                    [[</text>\n                <rect x=\"215\" y=\"5\" rx=\"5\" ry=\"5\" width=\"80\" height=\"20\" style=\"fill: ]] ..\n                    brokenColor .. [[; stroke: #1e1e1e; stroke-width:1;\"/>\n                <text x=\"255\" y=\"21\" class=\"fhudM1\">]] .. #brokenElements ..\n                    [[</text>]]\n    if #damagedElements > 0 or #brokenElements > 0 then\n        hudOutput = hudOutput ..\n                        [[<rect x=\"10\" y=\"31\" rx=\"5\" ry=\"5\" width=\"285\" height=\"20\" style=\"fill: #6e6e6e; stroke: #1e1e1e; stroke-width:1;\"/> ]] ..\n                        [[<text x=\"150\" y=\"46\" class=\"fhudM2\">]] ..\n                        GenerateCommaValue(\n                            string.format(\"%.0f\", totalShipMaxHP - totalShipHP)) ..\n                        [[ HP damage in total</text>]]\n    else\n        hudOutput = hudOutput .. [[<text x=\"150\" y=\"46\" class=\"fhudM4\">]] ..\n                        OkayCenterMessage .. [[</text>]] ..\n                        [[<text x=\"150\" y=\"66\" class=\"fhudM4\">Ship stands ]] ..\n                        GenerateCommaValue(string.format(\"%.0f\", totalShipMaxHP)) ..\n                        [[ HP strong.</text>]]\n\n    end\n    hudOutput = hudOutput .. [[</svg>]]\n\n    hudRowDistance = 25\n    if #damagedElements > 0 then\n        local damagedElementsToDraw = #damagedElements\n        if damagedElementsToDraw > 12 then damagedElementsToDraw = 12 end\n        if CurrentDamagedPage == math.ceil(#damagedElements / 12) then\n            damagedElementsToDraw = #damagedElements % 12\n        end\n        local i = 0\n        hudOutput = hudOutput .. [[<svg x=\"0\" y=\"100\">]] ..\n                        [[<rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"]] .. hudWidth ..\n                        [[\" height=\"300\" style=\"fill: yellow;opacity: 0.05;\"/>]]\n\n        for j = 1 + (CurrentDamagedPage - 1) * 12, damagedElementsToDraw +\n            (CurrentDamagedPage - 1) * 12, 1 do\n            i = i + 1\n            local DP = damagedElements[j]\n            if (hudSelectedType == 1 and hudSelectedIndex == i) then\n                hudOutput = hudOutput .. [[<rect x=\"0\" y=\"]] ..\n                                (i * hudRowDistance - 19) ..\n                                [[\" rx=\"0\" ry=\"0\" width=\"300\" height=\"26\" style=\"fill: yellow;\"/>]]\n                if UseMyElementNames == true then\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmall\">]] ..\n                                    string.format(\"%.32s\", DP.name) ..\n                                    [[</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmall\">]] ..\n                                    string.format(\"%.32s\", DP.type) ..\n                                    [[</text>]]\n                end\n                if (DamagedSortingMode == 3) then\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmall\">]] .. DP.percent ..\n                                    [[%</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmall\">]] ..\n                                    GenerateCommaValue(\n                                        string.format(\"%.0f\", DP.missinghp)) ..\n                                    [[</text>]]\n                end\n            else\n                if UseMyElementNames == true then\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmally\">]] ..\n                                    string.format(\"%.32s\", DP.name) ..\n                                    [[</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmally\">]] ..\n                                    string.format(\"%.32s\", DP.type) ..\n                                    [[</text>]]\n                end\n                if (DamagedSortingMode == 3) then\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmally\">]] .. DP.percent ..\n                                    [[%</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmally\">]] ..\n                                    GenerateCommaValue(\n                                        string.format(\"%.0f\", DP.missinghp)) ..\n                                    [[</text>]]\n                end\n                hudOutput = hudOutput .. [[<line x1=\"0\" x2=\"300\" y1=\"]] ..\n                                (7 + i * hudRowDistance) .. [[\" y2=\"]] ..\n                                (5 + i * hudRowDistance) ..\n                                [[\" style=\"stroke:#797953;\" />]]\n            end\n        end\n        hudOutput = hudOutput .. [[</svg>]]\n    end\n\n    if #brokenElements > 0 then\n        local brokenElementsToDraw = #brokenElements\n        if brokenElementsToDraw > 12 then brokenElementsToDraw = 12 end\n        if CurrentbrokenPage == math.ceil(#brokenElements / 12) then\n            brokenElementsToDraw = #brokenElements % 12\n        end\n        local i = 0\n        hudOutput = hudOutput .. [[<svg x=\"0\" y=\"400\">]] ..\n                        [[<rect x=\"0\" y=\"6\" rx=\"0\" ry=\"0\" width=\"]] .. hudWidth ..\n                        [[\" height=\"300\" style=\"fill: red;opacity: 0.05;\"/>]]\n\n        for j = 1 + (CurrentBrokenPage - 1) * 12, brokenElementsToDraw +\n            (CurrentBrokenPage - 1) * 12, 1 do\n            i = i + 1\n            local DP = brokenElements[j]\n            if (hudSelectedType == 2 and hudSelectedIndex == i) then\n                hudOutput = hudOutput .. [[<rect x=\"0\" y=\"]] ..\n                                (i * hudRowDistance - 19) ..\n                                [[\" rx=\"0\" ry=\"0\" width=\"300\" height=\"26\" style=\"fill: red;\"/>]]\n                if UseMyElementNames == true then\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmall\">]] ..\n                                    string.format(\"%.32s\", DP.name) ..\n                                    [[</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmall\">]] ..\n                                    string.format(\"%.32s\", DP.type) ..\n                                    [[</text>]]\n                end\n                if (brokenSortingMode == 3) then\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmall\">]] .. DP.percent ..\n                                    [[%</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmall\">]] ..\n                                    GenerateCommaValue(\n                                        string.format(\"%.0f\", DP.missinghp)) ..\n                                    [[</text>]]\n                end\n            else\n                if UseMyElementNames == true then\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmallr\">]] ..\n                                    string.format(\"%.32s\", DP.name) ..\n                                    [[</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"15\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmstartsmallr\">]] ..\n                                    string.format(\"%.32s\", DP.type) ..\n                                    [[</text>]]\n                end\n                if (brokenSortingMode == 3) then\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmallr\">]] .. DP.percent ..\n                                    [[%</text>]]\n                else\n                    hudOutput = hudOutput .. [[<text x=\"295\" y=\"]] ..\n                                    (i * hudRowDistance) ..\n                                    [[\" class=\"fmendsmallr\">]] ..\n                                    GenerateCommaValue(\n                                        string.format(\"%.0f\", DP.missinghp)) ..\n                                    [[</text>]]\n                end\n                hudOutput = hudOutput .. [[<line x1=\"0\" x2=\"300\" y1=\"]] ..\n                                (5 + i * hudRowDistance) .. [[\" y2=\"]] ..\n                                (5 + i * hudRowDistance) ..\n                                [[\" style=\"stroke:#795353;\" />]]\n            end\n        end\n        hudOutput = hudOutput .. [[</svg>]]\n    end\n\n    if #damagedElements or #brokenElements then\n        hudOutput = hudOutput .. [[<svg x=\"0\" y=\"720\">]] ..\n                        [[<text x=\"15\" y=\"10\" class=\"fhudM3\">Use up/down arrows to select element to find.</text>]] ..\n                        [[<text x=\"15\" y=\"25\" class=\"fhudM3\">Use right arrow to deselect.</text>]] ..\n                        [[<text x=\"15\" y=\"40\" class=\"fhudM3\">Use left arrow to exit HUD mode.</text>]] ..\n                        [[</svg>]]\n    end\n\n    hudOutput = hudOutput .. [[</svg>]]\n\n    return hudOutput\nend\n\nfunction DrawScreens()\n    if #screens > 0 then\n\n        local healthyColor = \"#00aa00\"\n        local brokenColor = \"#aa0000\"\n        local damagedColor = \"#aaaa00\"\n        local integrityColor = \"#aaaaaa\"\n        local healthyTextColor = \"white\"\n        local brokenTextColor = \"#ff4444\"\n        local damagedTextColor = \"#ffff44\"\n        local integrityTextColor = \"white\"\n\n        if #damagedElements == 0 then\n            damagedColor = \"#aaaaaa\"\n            damagedTextColor = \"white\"\n        end\n        if #brokenElements == 0 then\n            brokenColor = \"#aaaaaa\"\n            brokenTextColor = \"white\"\n        end\n\n        local screenOutput = \"\"\n\n        -- Draw Header\n        screenOutput = screenOutput ..\n                           [[<svg class=\"bootstrap\" viewBox=\"0 0 1920 1120\" width=\"1920\" height=\"1120\">\n                <defs><style>\n                      .ftitle { font-size: 60px; text-anchor: start;fill: white; }\n                      .ftitlew { font-size: 60px; text-anchor: start;fill: red; }\n                      .ftitle2 { font-size: 60px; text-anchor: start;fill: #565656; }\n                      .ftopmiddle { font-size: 40px; text-anchor: middle;}\n                      .ftopend { font-size: 40px; text-anchor: end;}\n                      .fcapstart { font-size: 30px; text-anchor: start; fill: white;}\n                      .fcapstarthy { font-size: 30px; text-anchor: start; fill: yellow;}\n                      .fcapstarthr { font-size: 30px; text-anchor: start; fill: red;}\n                      .fcapmiddle { font-size: 30px; text-anchor: middle; fill: white;}\n                      .fcapend { font-size: 30px; text-anchor: end; fill: white;}\n                      .fmstart { font-size: 25px; text-anchor: start; fill: white;}\n                      .fmstartg { font-size: 25px; text-anchor: start; fill: #1e1e1e;}\n                      .fmstarty { font-size: 25px; text-anchor: start; fill: #aaaa00;}\n                      .fmstartr { font-size: 25px; text-anchor: end; fill: #ff0000;}\n                      .fmmiddle { font-size: 25px; text-anchor: middle; fill: white;}\n                      .fmmiddleb { font-size: 30px; text-anchor: middle; fill: black;}\n                      .fmmiddler { font-size: 30px; text-anchor: middle; fill: red;}\n                      .fmend { font-size: 25px; text-anchor: end; fill: white;}\n                </style></defs>]]\n\n        -- Draw main background\n        screenOutput = screenOutput ..\n                           [[<rect width=\"1920\" height=\"1120\" style=\"fill: #]]..BackgroundColor..[[\"/>\n              <g>\n                <path d=\"M1839.05,206.36H1396.29a10.3,10.3,0,0,1,.34,2.48,9.84,9.84,0,0,1-.29,2.09h442.71c14.15,0,25.67,8.36,25.67,18.65v40.64c0,10.29-11.52,18.65-25.67,18.65H81.41c-14.16,0-25.68-8.36-25.68-18.65V229.58c0-10.29,11.52-18.65,25.68-18.65H1359.35a10.51,10.51,0,0,1-.28-2.09,10.3,10.3,0,0,1,.34-2.48H81.41c-17.65,0-32,10.4-32,23.22v40.64c0,12.82,14.31,23.22,32,23.22H1839.05c17.65,0,32-10.4,32-23.22V229.58C1871,216.76,1856.7,206.36,1839.05,206.36Z\" style=\"fill: #fff\"/>\n                <path d=\"M1377.86,202.29a11.78,11.78,0,0,0-3.88.66l-11-8c-83.9-61-83.9-61-202.71-61H73.25v4.57h1087c116.21,0,116.21,0,198.27,59.62l11.06,8a5.07,5.07,0,0,0-.77,2.64c0,3.62,4,6.56,9,6.56s9-2.94,9-6.56S1382.83,202.29,1377.86,202.29Z\" style=\"fill: #fff\"/>\n                <path d=\"M1349.79,224H1230.18a4.56,4.56,0,0,0-4.56,4.56V271.2a4.56,4.56,0,0,0,4.56,4.56h119.61a4.56,4.56,0,0,0,4.56-4.56V228.59A4.56,4.56,0,0,0,1349.79,224Zm2.28,47.17a2.28,2.28,0,0,1-2.28,2.28H1230.18a2.28,2.28,0,0,1-2.28-2.28V228.59a2.29,2.29,0,0,1,2.28-2.28h119.61a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <rect x=\"966.95\" y=\"224.03\" width=\"232.81\" height=\"51.73\" rx=\"4.56\" style=\"fill: ]] ..\n                           brokenColor .. [[\"/>\n                <path d=\"M900.33,224H779.44a4.56,4.56,0,0,0-4.57,4.56V271.2a4.56,4.56,0,0,0,4.57,4.56H900.33a4.56,4.56,0,0,0,4.56-4.56V228.59A4.56,4.56,0,0,0,900.33,224Zm2.28,47.17a2.28,2.28,0,0,1-2.28,2.28H779.44a2.29,2.29,0,0,1-2.29-2.28V228.59a2.29,2.29,0,0,1,2.29-2.28H900.33a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <rect x=\"516.2\" y=\"224.03\" width=\"232.81\" height=\"51.73\" rx=\"4.56\" style=\"fill: ]] ..\n                           damagedColor .. [[\"/>\n                <path d=\"M449.59,224H330a4.56,4.56,0,0,0-4.56,4.56V271.2a4.56,4.56,0,0,0,4.56,4.56H449.59a4.56,4.56,0,0,0,4.56-4.56V228.59A4.56,4.56,0,0,0,449.59,224Zm2.28,47.17a2.28,2.28,0,0,1-2.28,2.28H330a2.28,2.28,0,0,1-2.28-2.28V228.59a2.29,2.29,0,0,1,2.28-2.28H449.59a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <rect x=\"66.74\" y=\"224.03\" width=\"232.81\" height=\"51.73\" rx=\"4.56\" style=\"fill: ]] ..\n                           healthyColor .. [[\"/>\n                <path d=\"M1833.79,224H1714.18a4.57,4.57,0,0,0-4.57,4.57v42.6a4.56,4.56,0,0,0,4.57,4.57h119.61a4.56,4.56,0,0,0,4.56-4.57v-42.6A4.57,4.57,0,0,0,1833.79,224Zm2.28,47.17a2.29,2.29,0,0,1-2.28,2.29H1714.18a2.29,2.29,0,0,1-2.28-2.29v-42.6a2.28,2.28,0,0,1,2.28-2.28h119.61a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <path d=\"M1683.75,271.17c0,2.53-2.51,4.57-5.62,4.57H1402.62c-3.11,0-5.62-2-5.62-4.57v-42.6c0-2.52,2.51-4.57,5.62-4.57h275.51c3.11,0,5.62,2.05,5.62,4.57Z\" style=\"fill: ]] ..\n                           integrityColor .. [[\"/>\n              </g>]]\n\n        -- Draw Title and summary\n        if SimulationActive == true then\n            screenOutput = screenOutput ..\n                               [[<text x=\"70\" y=\"120\" class=\"ftitlew\">Simulated Report</text>]]\n        else\n            screenOutput = screenOutput ..\n                               [[<text x=\"70\" y=\"120\" class=\"ftitle\">Damage Report</text>]]\n        end\n        if YourShipsName == nil or YourShipsName == \"\" or YourShipsName ==\n            \"Enter here\" then\n            screenOutput = screenOutput ..\n                               [[<text x=\"690\" y=\"120\" class=\"ftitle2\">SHIP ID ]] ..\n                               shipID .. [[</text>]]\n        else\n            screenOutput = screenOutput ..\n                               [[<text x=\"650\" y=\"120\" class=\"ftitle2\">]] ..\n                               YourShipsName .. [[</text>]]\n        end\n        screenOutput = screenOutput .. [[\n                 <text x=\"185\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Healthy</text>\n                 <text x=\"435\" y=\"263\" class=\"ftopend\" fill=\"]] ..\n                           healthyTextColor .. [[\">]] .. healthyElements ..\n                           [[</text>\n\n                 <text x=\"635\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Damaged</text>\n                 <text x=\"885\" y=\"263\" class=\"ftopend\" fill=\"]] ..\n                           damagedTextColor .. [[\">]] .. #damagedElements ..\n                           [[</text>\n\n                 <text x=\"1085\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Broken</text>\n                 <text x=\"1335\" y=\"263\" class=\"ftopend\" fill=\"]] ..\n                           brokenTextColor .. [[\">]] .. #brokenElements ..\n                           [[</text>\n\n                 <text x=\"1545\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Integrity</text>\n                 <text x=\"1825\" y=\"263\" class=\"ftopend\" fill=\"]] ..\n                           integrityTextColor .. [[\">]] .. totalShipIntegrity ..\n                           [[%</text>]]\n\n        -- Draw damage elements\n\n        if #damagedElements > 0 then\n            local damagedElementsToDraw = #damagedElements\n            if damagedElementsToDraw > 12 then\n                damagedElementsToDraw = 12\n            end\n            if CurrentDamagedPage == math.ceil(#damagedElements / 12) then\n                damagedElementsToDraw = #damagedElements % 12\n            end\n            screenOutput = screenOutput ..\n                               [[<rect x=\"70\" y=\"350\" rx=\"10\" ry=\"10\" width=\"820\" height=\"]] ..\n                               ((damagedElementsToDraw + 1) * 50) ..\n                               [[\" style=\"fill:#66663f;stroke:#ffff00;stroke-width:3;\" />]]\n            screenOutput = screenOutput ..\n                               [[<rect x=\"80\" y=\"360\" rx=\"5\" ry=\"5\" width=\"800\" height=\"40\" style=\"fill:#33331a;\" />]]\n            if (DamagedSortingMode == 2) then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"100\" y=\"391\" class=\"fcapstarthy\">ID</text>]]\n            else\n                screenOutput = screenOutput ..\n                                   [[<text x=\"100\" y=\"391\" class=\"fcapstart\">ID</text>]]\n            end\n            if UseMyElementNames == true then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"230\" y=\"391\" class=\"fcapstart\">Element Name</text>]]\n            else\n                screenOutput = screenOutput ..\n                                   [[<text x=\"230\" y=\"391\" class=\"fcapstart\">Element Type</text>]]\n            end\n\n            if (DamagedSortingMode == 3) then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"525\" y=\"391\" class=\"fcapstarthy\">Health</text>]]\n            else\n                screenOutput = screenOutput ..\n                                   [[<text x=\"525\" y=\"391\" class=\"fcapstart\">Health</text>]]\n            end\n            if (DamagedSortingMode == 1) then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"730\" y=\"391\" class=\"fcapstarthy\">Damage</text>]]\n            else\n                screenOutput = screenOutput ..\n                                   [[<text x=\"730\" y=\"391\" class=\"fcapstart\">Damage</text>]]\n            end\n\n            local i = 0\n            for j = 1 + (CurrentDamagedPage - 1) * 12, damagedElementsToDraw +\n                (CurrentDamagedPage - 1) * 12, 1 do\n                i = i + 1\n                local DP = damagedElements[j]\n                screenOutput = screenOutput .. [[<text x=\"90\" y=\"]] ..\n                                   (380 + i * 50) .. [[\" class=\"fmstartg\">]] ..\n                                   string.format(\"%03.0f\", DP.id) .. [[</text>]]\n                if UseMyElementNames == true then\n                    screenOutput = screenOutput .. [[<text x=\"160\" y=\"]] ..\n                                       (380 + i * 50) .. [[\" class=\"fmstart\">]] ..\n                                       string.format(\"%.25s\", DP.name) ..\n                                       [[</text>]]\n                else\n                    screenOutput = screenOutput .. [[<text x=\"160\" y=\"]] ..\n                                       (380 + i * 50) .. [[\" class=\"fmstart\">]] ..\n                                       string.format(\"%.25s\", DP.type) ..\n                                       [[</text>]]\n                end\n                screenOutput = screenOutput .. [[<text x=\"605\" y=\"]] ..\n                                   (380 + i * 50) .. [[\" class=\"fmend\">]] ..\n                                   DP.percent .. [[%</text>]] ..\n                                   [[<text x=\"835\" y=\"]] .. (380 + i * 50) ..\n                                   [[\" class=\"fmend\">]] ..\n                                   GenerateCommaValue(\n                                       string.format(\"%.0f\", DP.missinghp)) ..\n                                   [[</text>]] ..\n                                   [[<line x1=\"160\" x2=\"834\" y1=\"]] ..\n                                   (386 + i * 50) .. [[\" y2=\"]] ..\n                                   (386 + i * 50) ..\n                                   [[\" style=\"stroke:#797953;\" />]]\n            end\n            screenOutput = screenOutput ..\n                               [[<line x1=\"640\" x2=\"480\" y1=\"290\" y2=\"350\" style=\"stroke:#ffff00;\" stroke-dasharray=\"2 5\" />\n                        <circle cx=\"640\" cy=\"290\" r=\"10\" stroke=\"#ffff00\" stroke-width=\"3\" fill=\"#66663f\" />\n                        <circle cx=\"480\" cy=\"350\" r=\"10\" stroke=\"#ffff00\" stroke-width=\"3\" fill=\"#66663f\" />]]\n\n            if #damagedElements > 12 then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"70\" y=\"343\" class=\"fmstarty\">Page ]] ..\n                                   CurrentDamagedPage .. \" of \" ..\n                                   math.ceil(#damagedElements / 12) ..\n                                   [[</text>]]\n\n                if CurrentDamagedPage < math.ceil(#damagedElements / 12) then\n                    screenOutput = screenOutput .. [[<svg x=\"70\" y=\"]] ..\n                                       (350 + 11 + (damagedElementsToDraw + 1) *\n                                           50) .. [[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aaaa00;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea(\"DamagedPageDown\", {\n                        id = \"DamagedPageDown\",\n                        x1 = 70,\n                        x2 = 270,\n                        y1 = 350 + 11 + (damagedElementsToDraw + 1) * 50,\n                        y2 = 350 + 11 + 50 + (damagedElementsToDraw + 1) * 50\n                    })\n                else\n                    DisableClickArea(\"DamagedPageDown\")\n                end\n\n                if CurrentDamagedPage > 1 then\n                    screenOutput = screenOutput .. [[<svg x=\"280\" y=\"]] ..\n                                       (350 + 11 + (damagedElementsToDraw + 1) *\n                                           50) .. [[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aaaa00;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea(\"DamagedPageUp\", {\n                        id = \"DamagedPageUp\",\n                        x1 = 280,\n                        x2 = 480,\n                        y1 = 350 + 11 + (damagedElementsToDraw + 1) * 50,\n                        y2 = 350 + 11 + 50 + (damagedElementsToDraw + 1) * 50\n                    })\n                else\n                    DisableClickArea(\"DamagedPageUp\")\n                end\n            end\n        end\n\n        -- Draw broken elements\n        if #brokenElements > 0 then\n            local brokenElementsToDraw = #brokenElements\n            if brokenElementsToDraw > 12 then\n                brokenElementsToDraw = 12\n            end\n            if CurrentBrokenPage == math.ceil(#brokenElements / 12) then\n                brokenElementsToDraw = #brokenElements % 12\n            end\n            screenOutput = screenOutput ..\n                               [[<rect x=\"1030\" y=\"350\" rx=\"10\" ry=\"10\" width=\"820\" height=\"]] ..\n                               ((brokenElementsToDraw + 1) * 50) ..\n                               [[\" style=\"fill:#663f3f;stroke:#ff0000;stroke-width:3;\" />]]\n            screenOutput = screenOutput ..\n                               [[<rect x=\"1040\" y=\"360\" rx=\"5\" ry=\"5\" width=\"800\" height=\"40\" style=\"fill:#331a1a;\" />]]\n            if (BrokenSortingMode == 2) then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"1060\" y=\"391\" class=\"fcapstarthr\">ID</text>]]\n            else\n                screenOutput = screenOutput ..\n                                   [[<text x=\"1060\" y=\"391\" class=\"fcapstart\">ID</text>]]\n            end\n            if UseMyElementNames == true then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"1190\" y=\"391\" class=\"fcapstart\">Element Name</text>]]\n            else\n                screenOutput = screenOutput ..\n                                   [[<text x=\"1190\" y=\"391\" class=\"fcapstart\">Element Type</text>]]\n            end\n            if (BrokenSortingMode == 1) then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"1690\" y=\"391\" class=\"fcapstarthr\">Damage</text>]]\n            else\n                screenOutput = screenOutput ..\n                                   [[<text x=\"1690\" y=\"391\" class=\"fcapstart\">Damage</text>]]\n            end\n\n            local i = 0\n            for j = 1 + (CurrentBrokenPage - 1) * 12, brokenElementsToDraw +\n                (CurrentBrokenPage - 1) * 12, 1 do\n                i = i + 1\n                local DP = brokenElements[j]\n                screenOutput = screenOutput .. [[<text x=\"1050\" y=\"]] ..\n                                   (380 + i * 50) .. [[\" class=\"fmstartg\">]] ..\n                                   string.format(\"%03.0f\", DP.id) .. [[</text>]]\n                if UseMyElementNames == true then\n                    screenOutput = screenOutput .. [[<text x=\"1120\" y=\"]] ..\n                                       (380 + i * 50) .. [[\" class=\"fmstart\">]] ..\n                                       string.format(\"%.25s\", DP.name) ..\n                                       [[</text>]]\n                else\n                    screenOutput = screenOutput .. [[<text x=\"1120\" y=\"]] ..\n                                       (380 + i * 50) .. [[\" class=\"fmstart\">]] ..\n                                       string.format(\"%.25s\", DP.type) ..\n                                       [[</text>]]\n                end\n                screenOutput = screenOutput .. [[<text x=\"1795\" y=\"]] ..\n                                   (380 + i * 50) .. [[\" class=\"fmend\">]] ..\n                                   GenerateCommaValue(\n                                       string.format(\"%.0f\", DP.missinghp)) ..\n                                   [[</text>]] ..\n                                   [[<line x1=\"1120\" x2=\"1794\" y1=\"]] ..\n                                   (386 + i * 50) .. [[\" y2=\"]] ..\n                                   (386 + i * 50) ..\n                                   [[\" style=\"stroke:#795353;\" />]]\n            end\n\n            screenOutput = screenOutput ..\n                               [[<line x1=\"1085\" x2=\"1440\" y1=\"290\" y2=\"350\" style=\"stroke:#ff0000;\" stroke-dasharray=\"2 5\" />\n                            <circle cx=\"1085\" cy=\"290\" r=\"10\" stroke=\"#ff0000\" stroke-width=\"3\" fill=\"#663f3f\" />\n                            <circle cx=\"1440\" cy=\"350\" r=\"10\" stroke=\"#ff0000\" stroke-width=\"3\" fill=\"#663f3f\" />]]\n\n            if #brokenElements > 12 then\n                screenOutput = screenOutput ..\n                                   [[<text x=\"1854\" y=\"343\" class=\"fmstartr\">Page ]] ..\n                                   CurrentBrokenPage .. \" of \" ..\n                                   math.ceil(#brokenElements / 12) ..\n                                   [[</text>]]\n\n                if CurrentBrokenPage > 1 then\n                    screenOutput = screenOutput .. [[<svg x=\"1442\" y=\"]] ..\n                                       (350 + 11 + (brokenElementsToDraw + 1) *\n                                           50) .. [[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aa0000;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea(\"BrokenPageUp\", {\n                        id = \"BrokenPageUp\",\n                        x1 = 1442,\n                        x2 = 1642,\n                        y1 = 350 + 11 + (brokenElementsToDraw + 1) * 50,\n                        y2 = 350 + 11 + 50 + (brokenElementsToDraw + 1) * 50\n                    })\n                else\n                    DisableClickArea(\"BrokenPageUp\")\n                end\n\n                if CurrentBrokenPage < math.ceil(#brokenElements / 12) then\n                    screenOutput = screenOutput .. [[<svg x=\"1652\" y=\"]] ..\n                                       (350 + 11 + (brokenElementsToDraw + 1) *\n                                           50) .. [[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aa0000;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea(\"BrokenPageDown\", {\n                        id = \"BrokenPageDown\",\n                        x1 = 1652,\n                        x2 = 1852,\n                        y1 = 350 + 11 + (brokenElementsToDraw + 1) * 50,\n                        y2 = 350 + 11 + 50 + (brokenElementsToDraw + 1) * 50\n                    })\n                else\n                    DisableClickArea(\"BrokenPageDown\")\n                end\n            end\n\n        end\n\n        -- Draw damage summary\n        if #damagedElements > 0 or #brokenElements > 0 then\n            screenOutput = screenOutput ..\n                               [[<text x=\"960\" y=\"1070\" class=\"ftopmiddle\" fill=\"white\">]] ..\n                               GenerateCommaValue(\n                                   string.format(\"%.0f\",\n                                                 totalShipMaxHP - totalShipHP)) ..\n                               [[ HP damage in total</text>]]\n        else\n            screenOutput = screenOutput .. [[<svg x=\"810\" y=\"410\">]] ..\n                               GetAllSystemsNominalBackground() .. [[</svg>]] ..\n                               [[<text x=\"960\" y=\"750\" class=\"ftopmiddle\" fill=\"#00aa00\">]] ..\n                               OkayCenterMessage .. [[</text>]] ..\n                               [[<text x=\"960\" y=\"800\" class=\"ftopmiddle\" fill=\"#00aa00\">Ship stands ]] ..\n                               GenerateCommaValue(\n                                   string.format(\"%.0f\", totalShipMaxHP)) ..\n                               [[ HP strong.</text>]]\n        end\n\n        -- Draw Sim Mode button\n        if SimulationMode == true then\n            screenOutput = screenOutput ..\n                               [[<rect x=\"1650\" y=\"50\" rx=\"10\" ry=\"10\" width=\"200\" height=\"40\" style=\"fill:#ff6666;\" />]] ..\n                               [[<text x=\"1750\" y=\"80\" class=\"fmmiddler\">Sim Mode</text>]]\n\n        else\n            screenOutput = screenOutput ..\n                               [[<rect x=\"1650\" y=\"50\" rx=\"10\" ry=\"10\" width=\"200\" height=\"40\" style=\"fill:#666666;\" />]] ..\n                               [[<text x=\"1750\" y=\"80\" class=\"fmmiddleb\">Sim Mode</text>]]\n        end\n\n        -- Draw HUD Mode button\n        if HUDMode == true then\n            screenOutput = screenOutput ..\n                               [[<rect x=\"1650\" y=\"100\" rx=\"10\" ry=\"10\" width=\"200\" height=\"40\" style=\"fill:#ff6666;\" />]] ..\n                               [[<text x=\"1750\" y=\"130\" class=\"fmmiddler\">HUD Mode</text>]]\n\n        else\n            screenOutput = screenOutput ..\n                               [[<rect x=\"1650\" y=\"100\" rx=\"10\" ry=\"10\" width=\"200\" height=\"40\" style=\"fill:#666666;\" />]] ..\n                               [[<text x=\"1750\" y=\"130\" class=\"fmmiddleb\">HUD Mode</text>]]\n        end\n\n        screenOutput = screenOutput .. [[</svg>]]\n\n        DrawSVG(screenOutput)\n\n        forceRedraw = false\n    end\nend\n\n-----------------------------------------------\n-- Execute\n-----------------------------------------------\n\nunit.hide()\nClearConsole()\nPrintDebug(\"SCRIPT STARTED\", true)\n\nInitiateSlots()\nSwitchScreens(true)\nInitiateClickAreas()\n\nif #screens ~= nil and #screens < 1 then\n    HUDMode = true\nend\n\nif core == nil then\n    DrawCenteredText(\"ERROR: No core connected.\")\n    PrintError(\"ERROR: No core connected.\")\n    goto exit\nelse\n    shipID = core.getConstructId()\nend\n\nGenerateDamageData()\nif forceRedraw then DrawScreens() end\n\nunit.setTimer('UpdateData', UpdateInterval)\nunit.setTimer('UpdateHighlight', HighlightBlinkingInterval)\n\n::exit::\n",
      "filter": {
        "args": [],
        "signature": "start()",
        "slotKey": "-1"
      },
      "key": "9"
    },
    {
      "code": "HideHighlight()\nSwitchScreens(false)\n",
      "filter": {
        "args": [],
        "signature": "stop()",
        "slotKey": "-1"
      },
      "key": "10"
    },
    {
      "code": "GenerateDamageData()\nif forceRedraw then\n    DrawScreens()\nend\nif HUDMode == true then\n     system.setScreen(GenerateHUDOutput())\n     system.showScreen(1)\nelse\n     system.showScreen(0)\nend",
      "filter": {
        "args": [
          {
            "value": "UpdateData"
          }
        ],
        "signature": "tick(timerId)",
        "slotKey": "-1"
      },
      "key": "11"
    },
    {
      "code": "ToggleHighlight()",
      "filter": {
        "args": [
          {
            "value": "UpdateHighlight"
          }
        ],
        "signature": "tick(timerId)",
        "slotKey": "-1"
      },
      "key": "12"
    },
    {
      "code": "HudDeselectElement()",
      "filter": {
        "args": [
          {
            "value": "straferight"
          }
        ],
        "signature": "actionStart(action)",
        "slotKey": "-2"
      },
      "key": "13"
    },
    {
      "code": "ToggleHUD()",
      "filter": {
        "args": [
          {
            "value": "strafeleft"
          }
        ],
        "signature": "actionStart(action)",
        "slotKey": "-2"
      },
      "key": "14"
    },
    {
      "code": "ChangeHudSelectedElement(1)",
      "filter": {
        "args": [
          {
            "value": "down"
          }
        ],
        "signature": "actionStart(action)",
        "slotKey": "-2"
      },
      "key": "15"
    },
    {
      "code": "ChangeHudSelectedElement(-1)",
      "filter": {
        "args": [
          {
            "value": "up"
          }
        ],
        "signature": "actionStart(action)",
        "slotKey": "-2"
      },
      "key": "16"
    }
  ],
  "methods": [],
  "events": []
}