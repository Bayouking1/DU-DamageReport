{"slots":{"0":{"name":"core","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"1"},"key":"0"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"2"},"key":"1"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"3"},"key":"2"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"4"},"key":"3"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"5"},"key":"4"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"6"},"key":"5"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"7"},"key":"6"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"8"},"key":"7"},{"code":"clickMouseX = x*1920\nclickMouseY = y*1120\nCheckClick(clickMouseX, clickMouseY)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"9"},"key":"8"},{"code":"--[[\n    DamageReport v1.21\n\n    Created By Dorian Gray\n\n    Discord: Dorian Gray#2623\n    InGame: DorianGray\n    GitHub: https://github.com/DorianTheGrey/DU-DamageReport\n\n    GNU Public License 3.0. Use whatever you want, be so kind to leave credit.\n\n    Thanks to Jericho, Dmentia and Archaegeo for learning from their fine scripts.\n]]\n\n-----------------------------------------------\n-- CONFIG\n-----------------------------------------------\n\nUseMyElementNames = true --export: If you active this, the display will not show the element type of damaged/broken elements but the name you gave them (truncated to 25 characters)\nUpdateInterval = 1 --export: Interval in seconds between updates of the calculations and (if anything changed) redrawing to the screen(s). You need to restart the script after changing this value.\nSimulationMode = false --export Randomize simluated damage on elements to check out the functionality of this script. And, no, your elements won't be harmed in the process :) You need to restart the script after changing this value.\n\nDebugMode = false -- Activate if you want some console messages\nVersionNumber = 1.2 -- Version number\n\ncore = nil \nscreens = {}\n\nshipID = 0\nforceRedraw = false\nSimulationActive=false\n\nclickAreas = {}\nDamagedSortingMode = 1 -- Define default sorting mode for damaged elements. 1 to sort by damage amount, 2 to sort by element id, 3 to sort by damage percent, \nBrokenSortingMode = 1 -- Define default sorting mode for broken elements. 1 to sort by damage amount, 2 to sort by element id\n\nCurrentDamagedPage = 1\nCurrentBrokenPage = 1\n\ntotalShipHP = 0\ntotalShipMaxHP = 0\ntotalShipIntegrity = 100\nelementsId = {}\ndamagedElements = {}\nbrokenElements = {}\nElementCounter = 0\nhealthyElements = 0\n\n-----------------------------------------------\n-- FUNCTIONS\n-----------------------------------------------\n\n\nfunction GenerateCommaValue(amount)\n    local formatted = amount\n    while true do  \n        formatted, k = string.gsub(formatted, \"^(-?%d+)(%d%d%d)\", '%1,%2')\n        if (k==0) then break end\n    end\n    return formatted\nend\n\nfunction PrintDebug(output, highlight) \n    highlight = highlight or false\n    if DebugMode then\n        if highlight then system.print(\"------------------------------------------------------------------------\") end\n        system.print(output)\n        if highlight then system.print(\"------------------------------------------------------------------------\") end\n    end\nend\n\nfunction PrintError(output) \n    system.print(output)\nend\n\nfunction DrawCenteredText(output)\n    for i=1,#screens,1 do\n         screens[i].setCenteredText(output)\n    end\nend\n\nfunction DrawSVG(output)\n    for i=1,#screens,1 do\n         screens[i].setSVG(output)\n    end\nend\n\nfunction ClearConsole()\n    for i=1,10,1 do\n        PrintDebug()\n    end\nend\n\nfunction SwitchScreens(state)\n    state = state or true\n    if #screens > 0 then\n        for i=1,#screens,1 do\n            if state then\n                screens[i].clear()\n                screens[i].activate()\n            else\n                screens[i].deactivate()\n                screens[i].clear()\n            end\n        end\n    end\nend\n\nfunction InitiateSlots()\n    for slot_name, slot in pairs(unit) do\n        if\n            type(slot) == \"table\"\n            and type(slot.export) == \"table\"\n            and slot.getElementClass\n        then\n            if slot.getElementClass():lower():find(\"coreunit\") then\n                core = slot\n            end\n            if slot.getElementClass():lower():find(\"screenunit\") then\n                screens[#screens + 1] = slot\n            end\n        end\n    end\nend\n\nfunction AddClickArea(newEntry)\n    table.insert(clickAreas, newEntry)\nend\n\nfunction RemoveFromClickAreas(candidate)\n    for k, v in pairs(clickAreas) do\n        if v.id==candidate then\n                clickAreas[k]=nil\n            break\n        end\n    end\nend\n\nfunction UpdateClickArea(candidate, newEntry)\n    for k, v in pairs(clickAreas) do\n        if v.id==candidate then\n                clickAreas[k]=newEntry\n            break\n        end\n    end\nend\n\nfunction DisableClickArea(candidate)\n    for k, v in pairs(clickAreas) do\n        if v.id==candidate then\n                UpdateClickArea(candidate, { id = candidate, x1 = -1, x2 = -1, y1 = -1, y2 = -1 } )\n            break\n        end\n    end\nend\n\nfunction InitiateClickAreas()\n    clickAreas = {}\n    AddClickArea( { id = \"DamagedDamage\", x1 = 725, x2 = 870, y1 = 380, y2 = 415 } )\n    AddClickArea( { id = \"DamagedHealth\", x1 = 520, x2 = 655, y1 = 380, y2 = 415 } )\n    AddClickArea( { id = \"DamagedID\", x1 = 90, x2 = 150, y1 = 380, y2 = 415 } )\n    AddClickArea( { id = \"BrokenDamage\", x1 = 1675, x2 = 1835, y1 = 380, y2 = 415 } )\n    AddClickArea( { id = \"BrokenID\", x1 = 1050, x2 = 1110, y1 = 380, y2 = 415 } )\n    AddClickArea( { id = \"ToggleSimulation\", x1 = 65, x2 = 660, y1 = 100, y2 = 145 } )\n    AddClickArea( { id = \"DamagedPageDown\", x1 = -1, x2 = -1, y1 = -1, y2 = -1 } )\n    AddClickArea( { id = \"DamagedPageUp\", x1 = -1, x2 = -1, y1 = -1, y2 = -1 } )\n    AddClickArea( { id = \"BrokenPageDown\", x1 = -1, x2 = -1, y1 = -1, y2 = -1 } )\n    AddClickArea( { id = \"BrokenPageUp\", x1 = -1, x2 = -1, y1 = -1, y2 = -1 } )\nend\n\nfunction CheckClick(x, y)\n    PrintDebug(\"Clicked at \"..x..\" / \"..y)\n    local HitTarget=\"\"\n    for k, v in pairs(clickAreas) do\n        if v and x>=v.x1 and x<=v.x2 and y>=v.y1 and y<=v.y2 then\n            HitTarget=v.id\n            break\n        end\n    end\n    if HitTarget==\"DamagedDamage\" then\n        DamagedSortingMode=1\n        CurrentDamagedPage=1\n        SortTables()\n        DrawScreens()\n    elseif HitTarget==\"DamagedHealth\" then\n        DamagedSortingMode=3\n        CurrentDamagedPage=1\n        SortTables()\n        DrawScreens()\n    elseif HitTarget==\"DamagedID\" then\n        DamagedSortingMode=2\n        CurrentDamagedPage=1\n        SortTables()\n        DrawScreens()\n    elseif HitTarget==\"BrokenDamage\" then\n        BrokenSortingMode=1\n        CurrentBrokenPage=1\n        SortTables()\n        DrawScreens()\n    elseif HitTarget==\"BrokenID\" then\n        BrokenSortingMode=2\n        CurrentBrokenPage=1\n        SortTables()\n        DrawScreens()\n    elseif HitTarget==\"DamagedPageDown\" then\n        CurrentDamagedPage = CurrentDamagedPage + 1\n        if CurrentDamagedPage > math.ceil(#damagedElements/12) then CurrentDamagedPage = math.ceil(#damagedElements/12) end\n        DrawScreens()\n    elseif HitTarget==\"DamagedPageUp\" then\n        CurrentDamagedPage = CurrentDamagedPage - 1\n        if CurrentDamagedPage < 1 then CurrentDamagedPage = 1 end\n        DrawScreens()\n    elseif HitTarget==\"BrokenPageDown\" then\n        CurrentBrokenPage = CurrentBrokenPage + 1\n        if CurrentBrokenPage > math.ceil(#brokenElements/12) then CurrentBrokenPage = math.ceil(#brokenElements/12) end\n        DrawScreens()\n    elseif HitTarget==\"BrokenPageUp\" then\n        CurrentBrokenPage = CurrentBrokenPage - 1\n        if CurrentBrokenPage < 1 then CurrentBrokenPage = 1 end\n        DrawScreens()\n    elseif HitTarget==\"ToggleSimulation\" then\n        CurrentDamagedPage=1\n        CurrentBrokenPage=1\n        if SimulationMode == true then\n            SimulationMode = false\n            SimulationActive = false\n            GenerateDamageData()\n            forceRedraw = true\n            DrawScreens()\n        else\n            SimulationMode = true\n            SimulationActive = false\n            GenerateDamageData()\n            forceRedraw = true\n            DrawScreens()\n        end\n\n    end\nend\n\nfunction SortTables()\n    -- Sort damaged elements descending by percent damaged according to setting\n    if DamagedSortingMode==1 then table.sort(damagedElements, function(a,b) return a.missinghp > b.missinghp end)\n    elseif DamagedSortingMode==2 then table.sort(damagedElements, function(a,b) return a.id < b.id end)\n    else table.sort(damagedElements, function(a,b) return a.percent < b.percent end)\n    end\n\n    -- Sort broken elements descending according to setting\n    if BrokenSortingMode==1 then table.sort(brokenElements, function(a,b) return a.maxhp > b.maxhp end)\n    else table.sort(brokenElements, function(a,b) return a.id < b.id end)\n    end\nend\n\nfunction GenerateDamageData()\n    if SimulationActive==true then\n        return\n    end\n\n    local formerTotalShipHP = totalShipHP\n    totalShipHP = 0\n    totalShipMaxHP = 0\n    totalShipIntegrity = 100\n    elementsId = {}\n    damagedElements = {}\n    brokenElements = {}\n    ElementCounter = 0\n    healthyElements = 0\n\n    elementsIdList = core.getElementIdList()\n\n    for _,id in pairs(elementsIdList) do\n        ElementCounter = ElementCounter + 1\n        idHP = core.getElementHitPointsById(id) or 0\n        idMaxHP = core.getElementMaxHitPointsById(id) or 0\n\n        if SimulationMode then\n            SimulationActive=true\n            local dice =math.random(0,10)\n            if dice < 2 then idHP = 0\n            elseif dice >=2 and dice < 5 then idHP = idMaxHP\n            else \n                idHP = math.random(1, math.ceil(idMaxHP))\n            end\n        end\n\n        totalShipHP = totalShipHP+idHP\n        totalShipMaxHP = totalShipMaxHP+idMaxHP\n\n        -- Is element damaged?\n        if idMaxHP > idHP then\n            idPos = core.getElementPositionById(id)\n            idName = core.getElementNameById(id)\n            idType = core.getElementTypeById(id)\n            if idHP>0 then\n                table.insert(damagedElements,\n                    {\n                        id = id,\n                        name = idName,\n                        type = idType,\n                        counter = ElementCounter,\n                        hp = idHP,\n                        maxhp = idMaxHP,\n                        missinghp = idMaxHP-idHP,\n                        percent = math.ceil(100/idMaxHP*idHP),\n                        pos =idPos\n                    }\n                )\n                if DebugMode then PrintDebug(\"Damaged: \"..idName..\" --- Type: \"..idType..\"\") end\n            -- Is element broken?\n            else\n                table.insert(brokenElements,\n                    {\n                        id = id,\n                        name = idName,\n                        type = idType,\n                        counter = ElementCounter,\n                        hp = idHP,\n                        maxhp = idMaxHP,\n                        missinghp = idMaxHP-idHP,\n                        percent = 0,\n                        pos =idPos\n                    }\n                )\n                if DebugMode then PrintDebug(\"Broken: \"..idName..\" --- Type: \"..idType..\"\") end\n            end\n        else\n            healthyElements = healthyElements + 1\n        end\n     end\n\n    -- Sort tables by current settings    \n    SortTables()\n\n    -- Update clickAreas\n\n\n    -- Determine total ship integrity\n    totalShipIntegrity = string.format(\"%2.0f\", 100/totalShipMaxHP*totalShipHP)\n\n    -- Has anything changes since last check? If yes, force redrawing the screens\n    if formerTotalShipHP ~= totalShipHP then\n        forceRedraw=true\n        formerTotalShipHP = totalShipHP\n    else forceRedraw=false\n    end  \nend\n\nfunction DrawScreens()\n    if #screens > 0 then\n\n        local healthyColor = \"#00aa00\"\n        local brokenColor = \"#aa0000\"\n        local damagedColor = \"#aaaa00\"\n        local integrityColor = \"#aaaaaa\"\n        local healthyTextColor = \"white\"\n        local brokenTextColor = \"#ff4444\"\n        local damagedTextColor = \"#ffff44\"\n        local integrityTextColor = \"white\"\n\n        if #damagedElements ==0 then\n            damagedColor = \"#aaaaaa\"\n            damagedTextColor = \"white\"\n        end\n        if #brokenElements == 0 then \n            brokenColor = \"#aaaaaa\"\n            brokenTextColor = \"white\"\n        end\n        \n        -- Draw Header\n        screenOutput = [[<svg class=\"bootstrap\" viewBox=\"0 0 1920 1120\" width=\"1920\" height=\"1120\">\n                            <defs><style>\n                                  .ftitle { font-size: 60px; text-anchor: start;fill: white; }\n                                  .ftitlew { font-size: 60px; text-anchor: start;fill: red; }\n                                  .ftitle2 { font-size: 60px; text-anchor: start;fill: #565656; }\n                                  .ftopmiddle { font-size: 40px; text-anchor: middle;}\n                                  .ftopend { font-size: 40px; text-anchor: end;}\n                                  .fcapstart { font-size: 30px; text-anchor: start; fill: white;}\n                                  .fcapstarthy { font-size: 30px; text-anchor: start; fill: yellow;}\n                                  .fcapstarthr { font-size: 30px; text-anchor: start; fill: red;}\n                                  .fcapmiddle { font-size: 30px; text-anchor: middle; fill: white;}\n                                  .fcapend { font-size: 30px; text-anchor: end; fill: white;}\n                                  .fmstart { font-size: 25px; text-anchor: start; fill: white;}\n                                  .fmstartg { font-size: 25px; text-anchor: start; fill: #1e1e1e;}\n                                  .fmstarty { font-size: 25px; text-anchor: start; fill: #aaaa00;}\n                                  .fmstartr { font-size: 25px; text-anchor: end; fill: #ff0000;}\n                                  .fmmiddle { font-size: 25px; text-anchor: middle; fill: white;}\n                                  .fmend { font-size: 25px; text-anchor: end; fill: white;}\n                                </style></defs>]]\n        \n        -- Draw main background\n        screenOutput = screenOutput..\n            [[<rect width=\"1920\" height=\"1120\" style=\"fill: #1e1e1e\"/>\n              <g>\n                <path d=\"M1839.05,206.36H1396.29a10.3,10.3,0,0,1,.34,2.48,9.84,9.84,0,0,1-.29,2.09h442.71c14.15,0,25.67,8.36,25.67,18.65v40.64c0,10.29-11.52,18.65-25.67,18.65H81.41c-14.16,0-25.68-8.36-25.68-18.65V229.58c0-10.29,11.52-18.65,25.68-18.65H1359.35a10.51,10.51,0,0,1-.28-2.09,10.3,10.3,0,0,1,.34-2.48H81.41c-17.65,0-32,10.4-32,23.22v40.64c0,12.82,14.31,23.22,32,23.22H1839.05c17.65,0,32-10.4,32-23.22V229.58C1871,216.76,1856.7,206.36,1839.05,206.36Z\" style=\"fill: #fff\"/>\n                <path d=\"M1377.86,202.29a11.78,11.78,0,0,0-3.88.66l-11-8c-83.9-61-83.9-61-202.71-61H73.25v4.57h1087c116.21,0,116.21,0,198.27,59.62l11.06,8a5.07,5.07,0,0,0-.77,2.64c0,3.62,4,6.56,9,6.56s9-2.94,9-6.56S1382.83,202.29,1377.86,202.29Z\" style=\"fill: #fff\"/>\n                <path d=\"M1349.79,224H1230.18a4.56,4.56,0,0,0-4.56,4.56V271.2a4.56,4.56,0,0,0,4.56,4.56h119.61a4.56,4.56,0,0,0,4.56-4.56V228.59A4.56,4.56,0,0,0,1349.79,224Zm2.28,47.17a2.28,2.28,0,0,1-2.28,2.28H1230.18a2.28,2.28,0,0,1-2.28-2.28V228.59a2.29,2.29,0,0,1,2.28-2.28h119.61a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <rect x=\"966.95\" y=\"224.03\" width=\"232.81\" height=\"51.73\" rx=\"4.56\" style=\"fill: ]]..brokenColor..[[\"/>\n                <path d=\"M900.33,224H779.44a4.56,4.56,0,0,0-4.57,4.56V271.2a4.56,4.56,0,0,0,4.57,4.56H900.33a4.56,4.56,0,0,0,4.56-4.56V228.59A4.56,4.56,0,0,0,900.33,224Zm2.28,47.17a2.28,2.28,0,0,1-2.28,2.28H779.44a2.29,2.29,0,0,1-2.29-2.28V228.59a2.29,2.29,0,0,1,2.29-2.28H900.33a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <rect x=\"516.2\" y=\"224.03\" width=\"232.81\" height=\"51.73\" rx=\"4.56\" style=\"fill: ]]..damagedColor..[[\"/>\n                <path d=\"M449.59,224H330a4.56,4.56,0,0,0-4.56,4.56V271.2a4.56,4.56,0,0,0,4.56,4.56H449.59a4.56,4.56,0,0,0,4.56-4.56V228.59A4.56,4.56,0,0,0,449.59,224Zm2.28,47.17a2.28,2.28,0,0,1-2.28,2.28H330a2.28,2.28,0,0,1-2.28-2.28V228.59a2.29,2.29,0,0,1,2.28-2.28H449.59a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <rect x=\"66.74\" y=\"224.03\" width=\"232.81\" height=\"51.73\" rx=\"4.56\" style=\"fill: ]]..healthyColor..[[\"/>\n                <path d=\"M1833.79,224H1714.18a4.57,4.57,0,0,0-4.57,4.57v42.6a4.56,4.56,0,0,0,4.57,4.57h119.61a4.56,4.56,0,0,0,4.56-4.57v-42.6A4.57,4.57,0,0,0,1833.79,224Zm2.28,47.17a2.29,2.29,0,0,1-2.28,2.29H1714.18a2.29,2.29,0,0,1-2.28-2.29v-42.6a2.28,2.28,0,0,1,2.28-2.28h119.61a2.29,2.29,0,0,1,2.28,2.28Z\" style=\"fill: #fff\"/>\n                <path d=\"M1683.75,271.17c0,2.53-2.51,4.57-5.62,4.57H1402.62c-3.11,0-5.62-2-5.62-4.57v-42.6c0-2.52,2.51-4.57,5.62-4.57h275.51c3.11,0,5.62,2.05,5.62,4.57Z\" style=\"fill: ]]..integrityColor..[[\"/>\n              </g>]]\n\n        -- Draw Title and summary\n        if SimulationActive==true then\n            screenOutput = screenOutput..[[<text x=\"70\" y=\"120\" class=\"ftitlew\">Simulated Report</text>]]\n        else\n            screenOutput = screenOutput..[[<text x=\"70\" y=\"120\" class=\"ftitle\">Damage Report</text>]]\n        end\n        screenOutput = screenOutput..\n                 [[<text x=\"690\" y=\"120\" class=\"ftitle2\">SHIP ID ]]..shipID..[[</text>\n\n                 <text x=\"185\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Healthy</text>\n                 <text x=\"435\" y=\"263\" class=\"ftopend\" fill=\"]]..healthyTextColor..[[\">]]..healthyElements..[[</text>\n\n                 <text x=\"635\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Damaged</text>\n                 <text x=\"885\" y=\"263\" class=\"ftopend\" fill=\"]]..damagedTextColor..[[\">]]..#damagedElements..[[</text>\n\n                 <text x=\"1085\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Broken</text>\n                 <text x=\"1335\" y=\"263\" class=\"ftopend\" fill=\"]]..brokenTextColor..[[\">]]..#brokenElements..[[</text>\n\n                 <text x=\"1545\" y=\"263\" class=\"ftopmiddle\" fill=\"black\">Integrity</text>\n                 <text x=\"1825\" y=\"263\" class=\"ftopend\" fill=\"]]..integrityTextColor..[[\">]]..totalShipIntegrity..[[%</text>]]\n\n        -- Draw damage elements\n        if #damagedElements > 0 then\n            local damagedElementsToDraw = #damagedElements\n            if damagedElementsToDraw>12 then damagedElementsToDraw=12 end\n            if CurrentDamagedPage==math.ceil(#damagedElements/12) then damagedElementsToDraw = #damagedElements%12 end\n            screenOutput = screenOutput..\n                         [[<rect x=\"70\" y=\"350\" rx=\"10\" ry=\"10\" width=\"820\" height=\"]]..((damagedElementsToDraw+1)*50)..[[\" style=\"fill:#66663f;stroke:#ffff00;stroke-width:3;\" />]]\n            screenOutput = screenOutput .. [[<rect x=\"80\" y=\"360\" rx=\"5\" ry=\"5\" width=\"800\" height=\"40\" style=\"fill:#33331a;\" />]]\n            if (DamagedSortingMode==2) then \n                screenOutput = screenOutput ..[[<text x=\"100\" y=\"391\" class=\"fcapstarthy\">ID</text>]]\n            else\n                screenOutput = screenOutput ..[[<text x=\"100\" y=\"391\" class=\"fcapstart\">ID</text>]]\n            end\n            if UseMyElementNames==true then screenOutput = screenOutput ..[[<text x=\"230\" y=\"391\" class=\"fcapstart\">Element Name</text>]]\n            else screenOutput = screenOutput ..[[<text x=\"230\" y=\"391\" class=\"fcapstart\">Element Type</text>]]\n            end\n            \n            if (DamagedSortingMode==3) then \n                screenOutput = screenOutput ..[[<text x=\"525\" y=\"391\" class=\"fcapstarthy\">Health</text>]]\n            else\n                screenOutput = screenOutput ..[[<text x=\"525\" y=\"391\" class=\"fcapstart\">Health</text>]]\n            end\n            if (DamagedSortingMode==1) then \n                screenOutput = screenOutput ..[[<text x=\"730\" y=\"391\" class=\"fcapstarthy\">Damage</text>]]\n            else\n                screenOutput = screenOutput ..[[<text x=\"730\" y=\"391\" class=\"fcapstart\">Damage</text>]]\n            end\n\n            local i=0\n            for j=1+(CurrentDamagedPage-1)*12,damagedElementsToDraw+(CurrentDamagedPage-1)*12,1 do\n                i = i + 1\n                local DP = damagedElements[j]\n                screenOutput = screenOutput ..\n                        [[<text x=\"90\" y=\"]]..(380+i*50)..[[\" class=\"fmstartg\">]]..string.format(\"%03.0f\",DP.id)..[[</text>]]\n                if UseMyElementNames==true then\n                    screenOutput = screenOutput .. [[<text x=\"160\" y=\"]]..(380+i*50)..[[\" class=\"fmstart\">]]..string.format(\"%.25s\", DP.name)..[[</text>]]\n                else\n                    screenOutput = screenOutput .. [[<text x=\"160\" y=\"]]..(380+i*50)..[[\" class=\"fmstart\">]]..string.format(\"%.25s\", DP.type)..[[</text>]]\n                end\n                screenOutput = screenOutput ..\n                        [[<text x=\"605\" y=\"]]..(380+i*50)..[[\" class=\"fmend\">]]..DP.percent..[[%</text>]]..\n                        [[<text x=\"835\" y=\"]]..(380+i*50)..[[\" class=\"fmend\">]]..GenerateCommaValue(string.format(\"%.0f\", DP.missinghp))..[[</text>]]..\n                        [[<line x1=\"160\" x2=\"834\" y1=\"]]..(386+i*50)..[[\" y2=\"]]..(386+i*50)..[[\" style=\"stroke:#797953;\" />]]\n            end\n            screenOutput = screenOutput ..\n                    [[<line x1=\"640\" x2=\"480\" y1=\"290\" y2=\"350\" style=\"stroke:#ffff00;\" stroke-dasharray=\"2 5\" />\n                        <circle cx=\"640\" cy=\"290\" r=\"10\" stroke=\"#ffff00\" stroke-width=\"3\" fill=\"#66663f\" />\n                        <circle cx=\"480\" cy=\"350\" r=\"10\" stroke=\"#ffff00\" stroke-width=\"3\" fill=\"#66663f\" />]]\n\n            if #damagedElements>12 then\n                screenOutput = screenOutput ..\n                    [[<text x=\"70\" y=\"343\" class=\"fmstarty\">Page ]]..CurrentDamagedPage..\" of \"..math.ceil(#damagedElements/12)..[[</text>]]\n\n                if CurrentDamagedPage < math.ceil(#damagedElements/12) then\n                    screenOutput = screenOutput ..\n                            [[<svg x=\"70\" y=\"]]..(350+11+(damagedElementsToDraw+1)*50)..[[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aaaa00;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea( \"DamagedPageDown\", { id = \"DamagedPageDown\", x1 = 70, x2 = 270, y1 = 350+11+(damagedElementsToDraw+1)*50, y2 = 350+11+50+(damagedElementsToDraw+1)*50 } )\n                else\n                    DisableClickArea( \"DamagedPageDown\" )\n                end\n           \n                if CurrentDamagedPage > 1 then\n                    screenOutput = screenOutput ..\n                            [[<svg x=\"280\" y=\"]]..(350+11+(damagedElementsToDraw+1)*50)..[[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aaaa00;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea( \"DamagedPageUp\", { id = \"DamagedPageUp\", x1 = 280, x2 = 480, y1 = 350+11+(damagedElementsToDraw+1)*50, y2 = 350+11+50+(damagedElementsToDraw+1)*50 } )\n                else\n                    DisableClickArea( \"DamagedPageUp\" )\n                end\n            end\n\n\n\n\n        end\n\n        -- Draw broken elements\n        if #brokenElements > 0 then\n            local brokenElementsToDraw = #brokenElements\n            if brokenElementsToDraw>12 then brokenElementsToDraw=12 end\n            if CurrentBrokenPage==math.ceil(#brokenElements/12) then brokenElementsToDraw = #brokenElements%12 end\n            screenOutput = screenOutput..\n                         [[<rect x=\"1030\" y=\"350\" rx=\"10\" ry=\"10\" width=\"820\" height=\"]]..((brokenElementsToDraw+1)*50)..[[\" style=\"fill:#663f3f;stroke:#ff0000;stroke-width:3;\" />]]\n            screenOutput = screenOutput .. [[<rect x=\"1040\" y=\"360\" rx=\"5\" ry=\"5\" width=\"800\" height=\"40\" style=\"fill:#331a1a;\" />]]\n            if (BrokenSortingMode==2) then \n                screenOutput = screenOutput ..[[<text x=\"1060\" y=\"391\" class=\"fcapstarthr\">ID</text>]]\n            else\n                screenOutput = screenOutput ..[[<text x=\"1060\" y=\"391\" class=\"fcapstart\">ID</text>]]\n            end\n            if UseMyElementNames==true then screenOutput = screenOutput .. [[<text x=\"1190\" y=\"391\" class=\"fcapstart\">Element Name</text>]]\n            else screenOutput = screenOutput .. [[<text x=\"1190\" y=\"391\" class=\"fcapstart\">Element Type</text>]]\n            end\n            if (BrokenSortingMode==1) then \n                screenOutput = screenOutput ..[[<text x=\"1690\" y=\"391\" class=\"fcapstarthr\">Damage</text>]]\n            else\n                screenOutput = screenOutput ..[[<text x=\"1690\" y=\"391\" class=\"fcapstart\">Damage</text>]]\n            end\n\n            local i=0\n            for j=1+(CurrentBrokenPage-1)*12,brokenElementsToDraw+(CurrentBrokenPage-1)*12,1 do\n                i = i + 1\n                local DP = brokenElements[j]\n                screenOutput = screenOutput ..\n                        [[<text x=\"1050\" y=\"]]..(380+i*50)..[[\" class=\"fmstartg\">]]..string.format(\"%03.0f\",DP.id)..[[</text>]]\n                if UseMyElementNames==true then\n                    screenOutput = screenOutput .. [[<text x=\"1120\" y=\"]]..(380+i*50)..[[\" class=\"fmstart\">]]..string.format(\"%.25s\", DP.name)..[[</text>]]\n                else\n                    screenOutput = screenOutput .. [[<text x=\"1120\" y=\"]]..(380+i*50)..[[\" class=\"fmstart\">]]..string.format(\"%.25s\", DP.type)..[[</text>]]\n                end\n                screenOutput = screenOutput ..\n                        [[<text x=\"1795\" y=\"]]..(380+i*50)..[[\" class=\"fmend\">]]..GenerateCommaValue(string.format(\"%.0f\", DP.missinghp))..[[</text>]]..\n                        [[<line x1=\"1120\" x2=\"1794\" y1=\"]]..(386+i*50)..[[\" y2=\"]]..(386+i*50)..[[\" style=\"stroke:#795353;\" />]]\n            end\n\n            screenOutput = screenOutput..             \n                        [[<line x1=\"1085\" x2=\"1440\" y1=\"290\" y2=\"350\" style=\"stroke:#ff0000;\" stroke-dasharray=\"2 5\" />\n                            <circle cx=\"1085\" cy=\"290\" r=\"10\" stroke=\"#ff0000\" stroke-width=\"3\" fill=\"#663f3f\" />\n                            <circle cx=\"1440\" cy=\"350\" r=\"10\" stroke=\"#ff0000\" stroke-width=\"3\" fill=\"#663f3f\" />]]\n\n\n            if #brokenElements>12 then\n                screenOutput = screenOutput ..\n                    [[<text x=\"1854\" y=\"343\" class=\"fmstartr\">Page ]]..CurrentBrokenPage..\" of \"..math.ceil(#brokenElements/12)..[[</text>]]\n\n                if CurrentBrokenPage > 1 then\n                    screenOutput = screenOutput ..\n                            [[<svg x=\"1442\" y=\"]]..(350+11+(brokenElementsToDraw+1)*50)..[[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aa0000;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M47.52,14.77,30.4,30.6a3.23,3.23,0,0,0,2.19,5.6H67.41a3.23,3.23,0,0,0,2.19-5.6L52.48,14.77A3.66,3.66,0,0,0,47.52,14.77Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea( \"BrokenPageUp\", { id = \"BrokenPageUp\", x1 = 1442, x2 = 1642, y1 = 350+11+(brokenElementsToDraw+1)*50, y2 = 350+11+50+(brokenElementsToDraw+1)*50 } )\n                else\n                    DisableClickArea( \"BrokenPageUp\" )\n                end\n            \n                if CurrentBrokenPage < math.ceil(#brokenElements/12) then\n                    screenOutput = screenOutput ..\n                            [[<svg x=\"1652\" y=\"]]..(350+11+(brokenElementsToDraw+1)*50)..[[\">\n                                <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"200\" height=\"50\" style=\"fill:#aa0000;\" />\n                                <svg x=\"80\" y=\"15\"><path d=\"M52.48,35.23,69.6,19.4a3.23,3.23,0,0,0-2.19-5.6H32.59a3.23,3.23,0,0,0-2.19,5.6L47.52,35.23A3.66,3.66,0,0,0,52.48,35.23Z\" transform=\"translate(-29.36 -13.8)\"/></svg>\n                            </svg>]]\n                    UpdateClickArea( \"BrokenPageDown\", { id = \"BrokenPageDown\", x1 = 1652, x2 = 1852, y1 = 350+11+(brokenElementsToDraw+1)*50, y2 = 350+11+50+(brokenElementsToDraw+1)*50 } )\n                else\n                    DisableClickArea( \"BrokenPageDown\" )\n                end\n            end\n\n\n\n        end\n\n        -- Draw damage summary\n        if #damagedElements>0 or #brokenElements > 0 then\n            screenOutput = screenOutput..\n                         [[<text x=\"960\" y=\"1070\" class=\"ftopmiddle\" fill=\"white\">]]..GenerateCommaValue(string.format(\"%.0f\", totalShipMaxHP-totalShipHP))..[[ HP damage in total</text>]]\n\n        end\n\n        screenOutput = screenOutput..[[</svg>]]\n\n        DrawSVG(screenOutput)\n\n        forceRedraw=false\n    end\nend\n\n-----------------------------------------------\n-- Execute\n-----------------------------------------------\n\nunit.hide()\nClearConsole()\nPrintDebug(\"SCRIPT STARTED\", true)\n\nInitiateSlots()\nSwitchScreens(true)\nInitiateClickAreas()\n\nif core == nil then\n    DrawCenteredText(\"ERROR: No core connected.\")\n    PrintError(\"ERROR: No core connected.\")\n    goto exit\nelse\n    shipID = core.getConstructId()\nend\n\nGenerateDamageData()\nif forceRedraw then\n    DrawScreens()\nend\n\nunit.setTimer('UpdateData', UpdateInterval)\n\n::exit::","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"9"},{"code":"if #screens > 0 then\n    for i=1,#screens,1 do\n        screens[i].deactivate()\n        screens[i].clear()\n    end\nend","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"10"},{"code":"GenerateDamageData()\nif forceRedraw then\n    DrawScreens()\nend","filter":{"args":[{"value":"UpdateData"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"11"}],"methods":[],"events":[]}